var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = wwwhalfordscom =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('.productDisplayTitle').text();
        if(name){
            name = cleanName(name);
        }
        return name;
    },
    inStock: function($) {
        var inStock =true
        var delivery = $('.deliveryOptionsLink').text();
        inStock = instockCheck(delivery,inStock)
        return inStock
    },
    price: function($) {
        var price = $('div#priceAndRating h2').text()
        price = getPrice(price+'.00');
        return price;
    },
    image: function($) {
        var image = $('img.amp-main-img').attr('src');
        return image;

    }
}

var Search = {
    container: function($) {
        return $('.largeProductModule');
    },
    name: function($, product) {
        var name = $(product).find('.productModuleTitleLink').text();
        if(name) {
            name = cleanName(name);
        }
        return name;
    },
    price: function($, product) {
        var price = $(product).find('.productModulePrice').text();
        if(price) {
            price = getPrice(price)
        }
        return price;
    },
    url: function($, product) {
        return $(product).find('.productModuleTitleLink').attr('href');
    },
    image: function($, product) {
        var image = $(product).find('div.productModuleDetails a.productModuleImageLink img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('.largeProductModule');


        var products = $('p#productCount span').text();
        products = products.match(/[0-9]+/g);

        if(items && products) { 
            items = items.length;

            return parseInt(items);
        } else {
            return null;
        }


     },
     pages: function($) {
        var items = $('.largeProductModule');
 

        var products = $('p#productCount span').text();
        products = products.match(/[0-9]+/g);

        if(items && products) {

            items = items.length;

            products = products.pop();

            sum = products / items
            return Math.ceil(sum)
        } else {
            return null;
        }



     }
}

var Category = {
    name: function($) {
        var name = $('nav.breadcrumb ul li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}
