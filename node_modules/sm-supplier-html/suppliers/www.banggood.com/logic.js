var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')


module.exports = bangGood = {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("p") + 2, url.lastIndexOf("."))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("p") + 2, Search.url($, product).lastIndexOf("."));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('strong.title_strong').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        var inStock = true
        let status = $('.stock_text').text()
        inStock = instockCheck(status,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('div.item_now_price').text();
        price = getPrice(price)
        return price;
    },
    image: function ($) {
        var image = $('img.dynamic-image').attr('src');

        return image;
    },
    description: function ($) {

        return null;
    }
}

var Search = {
    container: function ($) {
        var product = $('div.main');

        return product;
    },
    name: function ($, product) {
        var name = $(product).find('span.title a').attr('title');
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('span.price').text();
        price = getPrice(price);

        return price;
    },
    url: function ($, product) {
        var url = $(product).find('span.title a').attr('href');

        return url;
    },
    image: function ($, product) {
        var image = $(product).find('span.img a img').attr('data-original');

        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = parseInt($('div.page_info').text().split(' ')[2]);

        return items;
    },
    pages: function ($) {
        var items = $('div.page_info').text().split(' ')[2];
        var products = $('div.page_info').text().split(' ')[4];

        var sum = products / items;

        return Math.ceil(sum);
    }
}

var Category = {
    name: function ($) {
        var name = $('div.category_now_list dl.active dt').text();
        name = cleanName(name);
        return name;
    }
}
