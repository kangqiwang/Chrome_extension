var SearchPageInfo = require ('../../lib/searchPageInfo.js')
var ProductPageInfo = require ('../../lib/productPageInfo.js')
var logger = require('../../lib/logger.js')
var PageInfo = require ('../../lib/pageInfo.js')
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck.js')
module.exports = {
     'search' : function($, next) {
        var result = []

        $('div.c-product-tile').map(function(index, product) {

            var info = new SearchPageInfo()
            info.name = searchName($,product)
            info.price = searchPrice($,product)
            info.url = url($,product)
            info.image = searchImage($,product)
            info.country = 'uk'
            result.push(info)
        });

        // var pages = getNumberOfPages($)
        // for (var i = 0; i < result.length; i++)
        // {
        //     var info = result[i]
        //     info.pages = pages
        //     result[i] = info
        // }

        return result
    } ,

    'product' : function($, next) {
        var info  = new ProductPageInfo()
        info.inStock = isStock($)
        info.price = Price($, info.inStock)
        info.name = getName($, info.inStock)
        info.image = image($, info.inStock)
        info.country = 'uk'
        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }

}


function url($, product) {
    var link = $(product).find('a').attr('href')
    return "http://www.debenhams.com" + link;
}


function searchName($, product) {
    var brand = $(product).find('.dbh-brand-name').text().trim()
    var name = $(product).find('.dbh-product-name').text().trim()
    return brand + " " + name
}


function searchPrice($, product) {
    var thePrice = $(product).find('span[itemprop="price"]').text()
    thePrice = getPrice(thePrice)

    return thePrice
}


function getNumberOfPages($) {
    var matching = $('#pagination a').toArray()
    matching.pop()
    return (($(matching[matching.length-1]).text()))
}
function searchImage($, product) {
    return $(product).find('img').attr('src')

}


var isStock = function inStock($) {

    var isInStock = true;
    var checkstock = $('.stock-status-text-container').text()
    isInStock = instockCheck(checkstock,isInStock)
    // if (checkstock !== '') {
    //     checkstock = checkstock.toLowerCase(); 
    //     if(checkstock.indexOf('out of stock') > -1 || checkstock.indexOf('pre order')) {
    //         isInStock = false;
    //     }
    // }

    return isInStock;

}

var Price = function thePrice($, instock) {
    let price = $('div.current').text()
    price=getPrice(price)
    return price
}

var getName = function theName($, instock) {
    let name= $('h1').text()
    name=cleanName(name)
    return name

}
var image = function image($, inStock) {
    var image = $('.s7staticimage img').attr('src')

    return image

}
var Category = {
    name: function($) {
        return cleanName($("span.h1CategoryElements").text());
    }
}
var Pagination = {

     items: function($) {

        var items = $('div.product_view').text(); 
        if(items !== "") {
        items = items.match(/[0-9]+/g)[0];
        
        }else {
            if($('#body_content_ProductSelectionPage').find('.has-shades').length > 0) {
                items = 1;
            }
        }
        return parseInt(items);

     },
     pages: function($) {
        //return parseInt(cleanName($("div#pagination").text()).match(/[0-9]+/g).pop());

       var result = null;
       var products = $('div#pagination').text();

        if(products !== "") {
            products = products.match(/[0-9,]+/g).pop();
            result = parseInt(products);
        } else {
            if($('#body_content_ProductSelectionPage').find('.has-shades').length > 0) {
                result = 1;
            }
        }
       
        return result;

     }
}