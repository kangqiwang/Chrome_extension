var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("-")+1,url.lastIndexOf("/"))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("-")+1,Search.url($, product).lastIndexOf("/"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    }, 
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }, 
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }


}

var Product = {
    name: function($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var inStock = true
        var able = $('.formstyle p span').text()
        inStock = inStockCheck(able,inStock)
	return inStock;
    },
    
    price: function($) {
        var price =  $('span[itemprop="price"]').text();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('div#mainimg img#currentimage').attr('src');
        image = 'http://www.activitytoysdirect.com' + image;
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.brokerage_item');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('span.brokerage_title').html();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('span.prd-price').html();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = $(product).find('a').attr('href')
        return url;


    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
     //   image = 'http://www.activitytoysdirect.com' + image;
        return image;
    }
}

var Category = {
    name: function($) {
        return cleanName($("h1").text());
    }
}

var Pagination = {

     items: function($) {
        var items = $('select#perpage').text();
        items = items.match(/[0-9]+/g).pop();
        return parseInt(items);
     },
     pages: function($) {
        var items = $('select#perpage').text();
        var numitems = items.match(/[0-9]+/g).pop();

        var products = $('div.float_wrapper p').text();
        if(products.indexOf('We found') > -1) {
            products = products.substring(products.indexOf('We found ') + 2).substring(0, 11);
            products = products.match(/[0-9]+/g).pop();
        }

        var sum = products / numitems;
        return Math.ceil(sum);
     }
}