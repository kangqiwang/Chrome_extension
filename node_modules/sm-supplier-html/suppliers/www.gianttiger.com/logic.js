var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck=require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('[itemprop="name"]').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        var status = $('.dl-availableonline-wrapper').text()
        var inStock=true
        inStock=instockCheck(status,inStock)
        // if (status.indexOf('Not Available Online') > -1) {
        //     status = false;
        // } else {
        //     status = true;
        // }

        return inStock;
    },
    price: function ($) {
        var price = $('[itemprop="price"]').text()
        price = getPrice(price);
        if(price){
            return price;
        }else{
            price = $('.productPricing').text()
            price = getPrice(price)
            return price
        }
        
    },
    image: function ($) {
        var image = $('#mainimage').attr('src');

        return image;
    },
    description: function ($) {
        var des = $('#accordionTarget01').text().replace(/\s+/g, " ").trim();

        return des;
    }
}

var Search = {
    container: function ($) {
        var product = $('div.ml-grid-view-item');

        return product;
    },
    name: function ($, product) {
        var name = $(product).find('div.ml-thumb-name > a').text();
        name = cleanName(name);

        return name;
    },
    price: function ($, product) {
        var status = $(product).find('div.onlineInstockContainer').text();
        var price;

        if (status != '') {
            price = $(product).find('div.ml-thumb-price > span > span').text();
            price = getPrice(price);
        } else {
            price = null;
        }

        return price;
    },
    url: function ($, product) {
        var url = $(product).find('div.ml-thumb-name > a').attr('href');
        url = 'https://www.gianttiger.com' + url;

        return url;
    },
    image: function ($, product) {
        var image = $(product).find('div.ml-grid-item-image.ml-thumb-item > div > div > a > img').attr('src');

        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('div.ml-products-per-page-paging-enabled > ul > li.active > span').first().text();
        items = JSON.parse(items);

        return items;
    },
    pages: function ($) {
        //
        // there is no element on page with all products count
        //

        var pages = $('form > div.ml-paging-items-paging-enabled > ul > li.ml-paging-default').text();
        pages = pages[pages.length - 1];
        pages = JSON.parse(pages);

        return pages;
    }
}

var Category = {
    name: function ($) {
        var name = $('div.ml-dir-header-category-dropdown').text().trim();
        name = cleanName(name)

        return name;
    }
}