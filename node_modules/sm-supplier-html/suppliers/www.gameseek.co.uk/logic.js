var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var routine = require ("../../lib/routine.js");
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("pd/")+3,Search.url($, product).lastIndexOf("/"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1.product-name').text();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        var inStock = true;
        var checkStock = $('div.product-detail-info b').text();
        if(checkStock.indexOf("Out of Stock") > -1 ) {
            inStock = false;
        }

        return inStock;


    },
    price: function($) {
        var price = $('span.product-price').text();
        price = getPrice(price);
        return price

    },
    image: function($) {
        var image = $('div#product-image-wrapper img').attr('src');
        return image;

    },
    description: function($) {
        var description = $('div.product-short-desc p').not('a').text();
        description = cleanName(description);
        return description;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('ul.products-grid li div.product');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('h2.product-name').text();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('span.product-price').text();
        price = getPrice(price);
        return price

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = 'https://www.gameseek.co.uk' + $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('figure.product-image-area a.product-image img').attr('src')
        return image;

    }
}

var Pagination = {

     items: function($) {
        var items = $('ul.products-grid li div.product');
        items = items.length;
        return items;

     },
     pages: function($) {
        var items = $('ul.products-grid li div.product');
        items = items.length;

        var pages = $('div.sorter-meta').html();

        if(pages !== "") {
            pages = pages.match(/[0-9]+/g).pop();
            result = Math.ceil(pages / items);
        }else {
             if(Search.container($).length > 0) {
                result = 1;
            }
        }
        return result;

     }
}

var Category = {
    name: function($) {
        var name = $('section.active-filters ul.haz-rv-scroll li').text();
        name = cleanName(name);
        name = name.split(':');
        name = name[1].replace("Category","");
        name = name.replace("{{", "")
        name = name.replace("}}", "")
        name = name.replace(/\s/g, "")

        return name;
    }
}
