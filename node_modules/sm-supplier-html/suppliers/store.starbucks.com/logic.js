var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = starbucks =  {
    "useJavascript": true,
    "usePhantom": 'starbucks.phantom.js',
    
    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('h1.pdp-prodname').text();
        name = cleanName(name);
        return name;
    },

    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('.price .salesprice').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('#owl-pdp-caro img').attr('src');
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.product-card--grid__content');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.product-card--grid__name').text();
        var brandName = $(product).find('div.product-card--grid__brand').text();
        name = cleanName(name);
        brandName = cleanName(brandName);

        if(brandName) {
            name = brandName + " " + name;
        }

        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.product-card--grid__span--price').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find("a.product-card--grid__name-link").attr("href");

        url = "http://store.starbucks.com" + url;
        return url;

    },

    image: function($, product) {
        var image = $(product).find('img.product-card--grid__img').attr('src');
        return image;
    }
}
var Pagination = {

     items: function($) {
        var items = $('.product-card--grid'); 
        items = items.length;
        return parseInt(items);

     },
     pages: function($) {
        return 1;
     }
}

var Category = {
    name: function($) {
        var name = $('h1.hero-panel__title').text();
        name = cleanName(name);
        return name;
    }
}