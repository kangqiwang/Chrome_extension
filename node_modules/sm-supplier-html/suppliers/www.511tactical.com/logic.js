var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = tactical =  {
    "useJavascript": true,

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf("."))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf("."));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
            
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('div.product-name h1').text();
        name = cleanName(name);
        return name;
    },

    inStock: function($) {
        return "UNCHECKED"
},
    price: function($) {
        var price = $('span.price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $("a.product-image img").attr('src');
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('li.item.product.product-item');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('strong.product.name').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.price-box').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('div.item');
        return parseInt(items.length);
     },
     pages: function($) {
        var items = $('div.item');
        numitems = items.length;

        var products = $('div.pager p.amount').text();
        if(products === "") {
            return null
        } else {
        products = products.match(/[0-9]+/g).pop();
        }
        var sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('div.breadcrumbs-wrap h1').text();
        name = cleanName(name);
        return name;
    }
}
