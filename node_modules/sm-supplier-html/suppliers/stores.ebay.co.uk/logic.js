var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("=")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("=")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('h1.it-ttl').html();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        return 'unchecked'

    },
    price: function($) {
        var price = $('').html();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('td.img').not('a#linkMainImg').find('img#icImg').attr('src');
        
        return image;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('table td.gallery');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('table .ttl a').html();
        name = cleanName(name)
        return name;

    },
    price: function($, product) {
        var price = $(product).find('table span.bin').html();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('div a');
        if(anchor) {
            url = '' + $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('div.image img').attr('src');
        return image;
    }
}
var Category = {
    name: function($) {
        return cleanName($("span.keywordClass").text());
    }
}
var Pagination = {
     items: function($) {
        if(this.pages($) > 1) {
            return Search.container($).length;
        } else {
            return null;
        }
     },
     pages: function($) {
        return parseInt(cleanName($("span.page").text()).match(/[0-9]+/g)[1]);

     }
}