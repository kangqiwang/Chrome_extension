var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockCheck = require ('../../lib/inStockCheck.js')
module.exports = toywiz =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf(".com")+5,url.lastIndexOf("/"))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf(".com/")+5,Search.url($, product).lastIndexOf("/"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var isInStock = true;
        var availability = $('p.alertBox-message').text();
        var stocklevel = $('div.product-stock').text().match(/[0-9]+/g);
        var preorder = $('.productAvailability').text()
        isInStock = instockCheck(preorder,isInStock)
        if(stocklevel !== null) {
            stocklevel = parseInt(stocklevel);
            if(stocklevel < 5) {
                isInStock = false;
            }
        }

        if(availability.indexOf('Out of stock') > -1) {
            isInStock = false
        }

        if(preorder.indexOf('Pre-Order Now') > -1) {
            isInStock = false;
        }

        return isInStock;

    },
    price: function($) {
        var price = $('div.buyboxValue').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img#productImageMain').attr('src');
        return image;
    },
    description: function($) {
        var description = $('div#tab-description').text().replace("More...", "").trim();

        if(description !== null) {
            return description.replace(/(\r\n|\n|\r|\t)/gm,"");
        }
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.productBlock.itemBlock');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.productTextInner').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.price').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('a').attr('href');
        return url;
    },  
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return image
    }
}

var Pagination = {

     items: function($) {
        var items = $('li.product');
        return parseInt(items.length);
     },
     pages: function($) {
        var items = $('li.product');
        numitems = parseInt(items.length);

        var products = $('h1.page-heading').text();
        products = products.match(/[0-9]+/g);
        

        sum = products / numitems;
        return  Math.ceil(sum)
     }
}

var Category = {
    name: function($) {
        var name = cleanName($("h1.page-heading").text());
        var firstQuote = name.indexOf('"');
        var secondQuote = name.lastIndexOf('"');
        
        return name.slice(firstQuote + 1, secondQuote);

    }
}