var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = christianbook =  {
    "useJavascript": true,

    'sku': (url) => {
        let thisPattern = new RegExp(/^(\d{4,8}[A-Za-z]{0,2}(?![\;\?\&\.\,])*$)/g);
        var osku = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf("?"));
        let sku = thisPattern.test(osku) ? osku : null;
        return sku;
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.barcode = Product.barcode($)
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf("?"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },

    inStock: function($) {
        var isInStock = true
        var availability = $('div.CBD-ProductDetail-Medium.CBD-ProductDetailAvailability').text()
        
        isInStock = instockCheck(availability,isInStock)
        // if (availability) {
        //     if (availability.indexOf('In Stock') > -1) {
        //         isInStock = true
        //     }
        // }

	return isInStock;
},

    price: function($) {
        var price = $('span.CBD-ProductDetailActionPrice').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $("div.CBD-ProductDetailImageWrap img").attr('src');
        return 'http:' + image;
    },
    barcode: function($) {
        var barcode = $('div.CBD-TextContent').text();

        if(barcode.indexOf('UPC') > -1) {
            barcode = barcode.substring(barcode.indexOf('UPC:') + 5).substring(0, 12);
            return barcode;
        }
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('li.CBD-PreviewGroupItem');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('a.CBD-PreviewGroupItemLink').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.CBD-PreviewGroupItemPriceSale').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return 'http://www.christianbook.com' + url;

    },
    image: function($, product) {
        var image = $(product).find('a.CBD-PreviewGroupItemImage img').attr('src');
        return 'http:' + image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('li.CBD-PreviewGroupItem');
        return parseInt(items.length);
     },
     pages: function($) {
        var items = $('li.CBD-PreviewGroupItem');
        numitems = items.length;

        var products = $('div.CBD-PagingControlsDisplaying').text();
        if(products === ""){
            return null
        }else {
          products = products.match(/[0-9]+/g).pop();
        }
        var sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('h1.CBD-MastheadHeading').text();
        name = cleanName(name);
        return name;
    }
}
