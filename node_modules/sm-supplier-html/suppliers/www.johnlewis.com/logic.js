var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require("../../lib/routine.js");
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = JohnLewis = {
    "useJavascript": true,

    'sku': (url) => {
        (url)
        url = url.split('/')
        url = url[4]


        if (url.indexOf('?') > -1) {
            url = url.split('?')
            url = url[0]
        }
        //  url = url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
        //  (url)
        //  ("^^^^^^^^^^^^^^^^^^^6")
        // return url.split('?')[0]
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            var sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf(""))
            info.name = Search.name($, product);
            info.sku = sku.split('?')[0];
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            // result.push(info)

            if (info.price !== null) {
                result.push(info)
            }
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        var isInStock = true;
        let availability = $('p.u-centred').last().text()
        isInStock = inStockCheck(availability,isInStock)
        
        
        return isInStock
    },

    price: function ($) {
        var price = $('prices-container>meta[itemprop="price"]').attr('content');
        price = getPrice(price);
        return price;
    },

    image: function ($) {
        var image = $("img").attr('src');
        return 'http://www.johnlewis.com' + image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('.product-card');
        return searchProducts;
    },
    name: function ($, product) {
        var name = $(product).find('h2').text();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('.product-card__price-span').text();

        if (price.indexOf('-') > -1) {
            price = null
        }
        price = getPrice(price);
        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = 'https://www.johnlewis.com' + $(anchor).attr('href');
        }
        return url;

    },

    image: function ($, product) {
        var image = $(product).find('img').attr('data-src');
        return 'https:' + image;
    }
}


var Pagination = {

    items: function ($) {
        /*        var items = $('span.show-all').text();
                items = items.match(/[0-9]+/g);
                return parseInt(items);*/

        return routine.matchNumbersAndPop($, 'span.show-all');

    },
    pages: function ($) {
        /*        var items = $('span.show-all').text();
                numitems = items.match(/[0-9]+/g).pop();*/

        var numitems = routine.matchNumbersAndPop($, 'span.show-all');

        /*        var products = $('h1').text();
                products = products.match(/[0-9]+/g).pop();*/

        var products = routine.matchNumbersAndPop($, 'h1');
        /*
                sum = products / numitems
                return Math.ceil(sum)*/

        return routine.pagesFromTotalAndProd(products, numitems);
    }
}

var Category = {
    name: function ($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name.replace(/\s*\(.*?\)\s*/g, '');
    }
}

