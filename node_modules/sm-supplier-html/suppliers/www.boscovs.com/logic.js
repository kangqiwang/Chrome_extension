var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck')
module.exports = Boscovs = {
    "useJavascript": true,
    "usePhantom": "boscovs.phantom.js",

    'sku': (url) => {
        url = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf("."))
        return url
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            if (Search.url($, product) != undefined) {
                info.name = Search.name($, product);
                info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf("."));
                info.price = Search.price($, product);
                info.url = Search.url($, product);
                info.image = Search.image($, product);
                info.country = 'us';

                //   result.push(info)

                if (info.price !== null) {
                    result.push(info)
              //      (info)
                }

            }

        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('div[itemprop="name"]').text();
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        var inStock = true
        var check= $('.subpend-1').text()
        inStock=instockCheck(check,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('span#prodTotal').text();
        var saleprice = $('span.m-large').html()

        if (saleprice !== null) {
            price = saleprice;
        }
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('#altImagesDiv img').attr('src');
        return image;
    }
}

var Search = {
    container: function ($) {
        let container = $('div.thirds');
        return container;
    },
    name: function ($, product) {
        var name = $(product).find('div.prod_title a').text();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('.prod_price span.dark-blue:nth-child(2)').text();
        var saleprice = $(product).find('span.m-large').text()

        if (saleprice !== "") {
            price = saleprice;
        }

        if (price !== null) {
            if (saleprice.indexOf('-') > -1) {
                price = null;
            }
        }

        price = getPrice(price);
        return price;
    },
    url: function ($, product) {
        var url = "";
        var anchor = $(product).find('a');
        if (anchor) {
            url = $(anchor).attr('href');
        }

        if (url != undefined) {
            if (url.indexOf('https://www.boscovs.com') < 0) {
                url = 'https://www.boscovs.com' + url;
            }
        }

        return url;

    },

    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('select.sli_selector').text();
        if (items !== "") {
            items = items.match(/[0-9]+/g).pop();
            items = parseInt(items);
        } else {
            if (Search.container($).length > 0) {
                items = 1;
            }
        }

        return items;
    },
    pages: function ($) {
        var items = $('select.sli_selector').text();
        if (items !== "") {
            items = items.match(/[0-9]+/g).pop();
            items = parseInt(items);
        } else {
            if (Search.container($).length > 0) {
                items = 1;
            }
        }

        var result = null;
        var products = $('div.candara span').text();
        if (products !== "") {
            products = products.match(/[0-9]+/g).pop()
            result = Math.ceil(products / items);
        } else {
            if (Search.container($).length > 0) {
                result = 1;
            }
        }

        return result;
    }
}

var Category = {
    name: function ($) {
        var name = $('title').text();
        name = name.split('-').shift();
        return cleanName(name)
    }
}