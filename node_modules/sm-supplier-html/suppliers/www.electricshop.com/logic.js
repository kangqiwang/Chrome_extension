var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require ("../../lib/routine.js"); 

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('div[itemprop="name"]').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var isInStock = true;
        var producttop = $('#frmProductDetail').html()

        if(producttop !== null) {
            if((producttop.indexOf('discontinued') > -1) 
            || (producttop.indexOf('call for our best price') > -1)
            || (producttop.indexOf('Available for Pre Order') > -1)) {
                isInStock = false
            }
        }
        return isInStock
    },
    price: function($) {
        var price = $('label#mainPrice').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img.product_image').attr('src');
        return image;
    },
    description: function($) {
        var description = $('div.product-box1').text();
        return description;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div#lazyContent > div');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.text2 a').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.price span.our').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('div.text2 a').attr('href');
        return url;
    },
    image: function($, product) {   
        var image = $(product).find('div#prodImage a img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('select#lstItem').text();
        items = items.match(/[0-9]+/g).pop();
        return parseInt(items);
     },
     pages: function($) {
/*        var items = $('select#lstItem').text();
        numitems = items.match(/[0-9]+/g).pop();*/

        var numitems = routine.matchNumbersAndPop($, 'select#lstItem');

        var products = $('tbody').text();
       
        if(products.indexOf('Of') > -1) {
            products = products.substring(products.indexOf('Of') + 3).substring(0, 3);
            products = products.match(/[0-9]+/g)

            if(numitems !== null && products !== null) {
                products = products.pop();
                /*
                var sum = products / numitems;
                return Math.ceil(sum);*/
                return routine.pagesFromTotalAndProd(products, numitems);
            } else {
                return null;
            }

        }


     }
}

var Category = {
    name: function($) {
        var name = $('div.pageheader h1').text();
        name = cleanName(name);
        return name;
    }
}
