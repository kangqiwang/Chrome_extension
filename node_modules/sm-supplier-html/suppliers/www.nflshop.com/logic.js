var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var instockCheck = require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
            
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('.product-title-container>h1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var inStock = true;
        var stockMessage = $('span.stock-availability').text();
        inStock= instockCheck(stockMessage,inStock)
        if (stockMessage) {
            if (stockMessage.toLowerCase().indexOf('out of stock') > -1) {
                inStock = false;
            }
        }
        return inStock;
    },
    price: function ($) {
        var price = $('.regular-price').first().text();
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('img.current-image').attr('src');
        return 'http:' + image;
    },
    description: function ($) {
        var description = $('div#product-description-disclosable').text();
        if (description) {
            description = description.replace(/(\r|\n|\r\n)/gm, ' ').replace(/\s+/gm, ' ').trim();
            return description;
        } else {
            return '';
        }
    }
}

var Search = {
    container: function ($) {
        return $('.column');
    },
    name: function ($, product) {
        var name = $(product).find('h4.product-card-title').text();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        let salePrice = $(product).find('div.sale-price').text();
        salePrice = getPrice(salePrice);
        let regPrice = $(product).find('div.regular-price').text();
        regPrice = getPrice(regPrice);

        if (salePrice != '') {
            return salePrice;
        } else {
            return regPrice
        }
    },
    url: function ($, product) {
        var url = $(product).find('a').attr('href');
        return 'https://www.nflshop.com' + url;
    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return 'https:' + image;
    }
}

var Pagination = {

    items: function ($) {
        var products = $('select.itemsPerPageSelect').text();
        products = products.match(/\d+/gm).pop();
        return parseInt(products);
    },
    pages: function ($) {
        var products = $('select.itemsPerPageSelect').text();
        products = products.match(/\d+/gm).pop();

        var total = $('span.itemsShown').text();
        total = total.match(/\d+/gm).pop();


        var sum = total / products;
        return Math.ceil(sum);
    }
}

var Category = {
    name: function ($) {
        var name = $('ul.breadcrumbs li span.current').text();
        name = cleanName(name);
        return name;
    }
}
