var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var instockCheck =require('../../lib/inStockCheck')
module.exports = replaceWithSupplierName = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },
/*
    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(".prd"))
    },
*/
    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            //info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(".prd"));
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1.nameproduct').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var inStock = true;
        var stockMessage = $('div.stkstatus.col-xs-6.col-sm-6.col-md-4.col-lg-4').text();
        inStock=instockCheck(stockMessage,inStock)
        return inStock;
    },
    price: function ($) {
        var price = $('div.hidden-xs.hidden-sm.towprice').text();
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('img#mainproductimage').attr('src');
        return image;
    },
    /*
    description: function ($) {
        var description = $('div.description').text();
        if (description) {
            return description.replace(/\s+/gm, ' ').trim();
        }
    }
    */
}

var Search = {
    container: function ($) {
        return $('div.linelist');
    },
    name: function ($, product) {
        var name = $(product).find('div.col-xs-12.col-sm-12.col-md-12.col-lg-12').text();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('div.col-xs-6.col-sm-6.col-md-6.col-lg-6.price').text();
        price = getPrice(price.replace(/\s+/gm, ''));
        return price;
        
    },
    url: function ($, product) {
        var url = $(product).find('div.col-xs-12.col-sm-12.col-md-12.col-lg-12.productLLName a').attr('href');
        return 'https://www.towerhobbies.com' + url.trim();
    },
    image: function ($, product) {
        var image = $(product).find('img.lazy.img-responsive.center-block').attr('data-original');
        return image;
    }
}

/*
var Pagination = {
    items: function ($) {
        var products = $('select[name=productsPerPage]').text();
        if (products === "") {
            return null
        } else {
            products = products.match(/\d+/gm).pop();
        }

        return parseInt(products);
    },
    pages: function ($) {
        var products = $('select[name=productsPerPage]').text();

        if (products === "") {
            return null
        } else {
            products = products.match(/\d+/gm).pop();
        }



        var total = $('div#centerContent table td:contains(items)').text();

        if (total === "") {
            return null
        } else {
            total = total.match(/\d+/gm).pop();
        }

        var sum = total / products;
        return Math.ceil(sum);
    }
}
*/
var Category = {
    name: function ($) {
        var name = $('div.text-center.headergroup').text();
        name = cleanName(name);
        return name;
    }
}

