var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockCheck = require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("m/")+2,url.lastIndexOf("/"))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("m/")+2,Search.url($, product).lastIndexOf("/"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        return cleanName($("h1.name").text());
    },
    inStock: function($) {
        var inStock = true
        var check =$('.shipping-avail').text()
        inStock=instockCheck(check,inStock)
        return inStock
},
    price: function($) {
        return getPrice($(".price on-sale").text());
    },
    image: function($) {
        return $("a.action-main-image img").attr("src");
    },
    description: function($) {
        return $("p").text().trim();
    }
}

var Search = {
    container: function($) {
        return $("div.item");
    },
    name: function($, product) {
        return cleanName($(product).find("div.details div.name a").text());
    },
    price: function($, product) {
        return getPrice($(product).find("div.price").text());
    },
    url: function($, product) {
        return $(product).find("div.name a").attr("href");
    },
    image: function($, product) {    
        return $(product).find("div.image img").attr("src").replace("รท","&div_");
    }
}

var Pagination = {
     items: function($) {
        return $("div.results-count span").text().match(/[0-9]+/g)[1];
     },
     pages: function($) {
        var items = Pagination.items($);
        var itemsTot = $("div.results-count").text().match(/[0-9]+/g)[0];

        return String(Math.ceil(itemsTot / items));
     }
}

var Category = {
    name: function($) {
        var name = $("h1.page-heading").text();
        var col = name.indexOf(":");

        return name = cleanName(name.slice(col + 1));
    }
}