var ProductPageInfo = function() {
    this.name = null,
    this.image = null,
    this.barcode = null
    
}
var SearchPageInfo = function() {
    this.barcode =  null,
    this.name = null,
    this.url = null,
    this.image = null,
    this.asin = null
}

var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var camelCamelCamelLogic = require('../../lib/camelCamelCamelLogic.js')

module.exports = CamelCamelCamel =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.image = Product.image($)
        info.barcode = Product.barcode($)


        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            if(info.name === 'PRODUCT_PAGE') {
                var nameAndAsin = Search.nameAndAsin($, product);
                info.name = nameAndAsin.name;
                info.asin = nameAndAsin.asin;
            } else {
                info.asin = Search.asin($, product);
            }

            info.barcode = Search.barcode($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.breadcrumb = Search.breadcrumb($, product);
            info.model = Search.model($, product);
            info.amazonPrice = Search.amazonPrice($, product);
            info.thirdPartyNew = Search.thirdPartyNew($, product);
            info.country = "uk";

            result.push(info)
        });

        return result
    }

}

var Product = {
    name: function($) {
        var name = $('h1.notopmargin').text().replace('Amazon price history for', '');
        name = cleanName(name);
        name = name.split(' in');
        return name[0]

    },
    barcode: function($) {
        var barcode = $("meta[name='keywords']").attr('content');
        var keywordSplit = barcode.split(',');
        var result = null;
        keywordSplit.map(function(item) {
            if(item.indexOf('EAN') !== -1) {
                result = item.replace(' EAN: ','').trim();
            }   
            
        })

        return result;

    },
    image: function($) {
        var image = $('div.colparent div.col').css('background');
        image = image.split('(');
        image = image[1].replace(") top center no-repeat","")
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div#content div#products_list table tbody tr').not('tr.ad');
        
        if(searchProducts.length === 0) {
            searchProducts = $('div#content div.colparent');
        }

        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('.product_title a').text();

         if(name === "") {
            name = 'PRODUCT_PAGE'
        }

        name = cleanName(name);
        return name;
    },
    nameAndAsin: function($, product) {
        return camelCamelCamelLogic.nameAndAsin($, product);
    },
    barcode: function($, product) {
        var barcode = $(product).find('td.product_info div:nth-child(3):nth-child(3)').text();
        return barcode.replace(/\D/g, '').slice(0, 13);
    },
    url: function($, product) {
        var anchor = $(product).find('.product_title a');
        if(anchor) {
            url = $(anchor).attr('href');
        }

        if(url === undefined) {
            anchor = $(product).find('div.col a')
            
            if(anchor) {
                url = $(anchor).attr('href');
            }                
        }

        return url;
    },
    image: function($, product) {
        var image = $(product).find('.product_image img').attr('src');
        if(image === undefined) {
            image = $(product).find('.col').css('background').replace("#fff", "").replace("url(", "").replace(") top center no-repeat", "");
            image = cleanName(image);
        }

        return image;
    },
    asin: function($, product) {
        var url = null;
        var anchor = $(product).find('.product_title a');
        if(anchor) {
            url = $(anchor).attr('href');
        }

        var urlSplit = url.split('/');
        
        var result = urlSplit[5];
        result = result.replace('?context=browse', '').replace('?context=search', '').trim();

         return result;
    },
    breadcrumb: function($, product) {
        var breadcrumb = $(product).find('div.breadcrumbs').text().replace("In:","");
        breadcrumb = cleanName(breadcrumb);
        return breadcrumb;
    },
    model: function($, product) {
        var model = $(product).find('td.product_info div:nth-child(3):nth-child(3)').text().trim();
        model = model.split('Model');
        model = model[1]

        if(model !== undefined) {
            model = model.replace(/\n/g, "").replace(/ /g,"").replace("OrdernowOrdernow","").replace("Ordernow","").replace(":","");
        }else {
            model = "NO MODEL";
        }
        return model;

    },
    amazonPrice: function($, product) {
        var amazonPrice = $(product).find('div.price_amazon').text();
        
        if(amazonPrice === "") {
            amazonPrice = $(product).find('span.green').text()
        }

        amazonPrice = cleanName(amazonPrice).replace("£","");
        return amazonPrice
    },
    thirdPartyNew: function($, product) {
        var thirdPartyNew = $(product).find('div.price_new').text();
        thirdPartyNew = cleanName(thirdPartyNew).replace("£", "");
        return thirdPartyNew;
    }
}


