var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.barcode = Search.barcode($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('span[itemprop="name"]').text().trim();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var isInStock = true;
        var checkStock = $('.flags-body span[data-reactid]').text();

        isInStock = instockCheck(checkStock,isInStock)

        return isInStock;
    },
    price: function($) {
        var price = $('.subscription-price ul.price li.price-current').text();
        price = getPrice(price);

        if (price != '') {
            return price;
        } else {
            return null;
        }

        
    },
    image: function($) {
        var image = $('#A2 span img').attr('src');

        return 'https:'+image
    },
    description: function($) {
        var descriptionTab = $('#tabSections #Overview_Tab');

        if (descriptionTab.length != 0) {
            var description = $('.wc-rich-content-description').first().text().trim();

            return description;
        } else {
            return null;
        }
    }
}

var Search = {
    container: function($) {
        var product = $('div.item-container').not('.item-container-grid');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('a.item-title').text()
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('.price-current').not('.price-current-label').text().replace(/\s/g,'')
        
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('.item-title').attr('href');
        return url;
    },
    barcode: function($, product) {
       barcode = null;
       return barcode;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
            image = 'https:' + image
        return image;
    }
}

var Pagination = {

     items: function($) {
         var items = $('select#select_top').text();
         items = items.match(/[0-9]+/g).pop(); //  I USE THE DROPDOWN TO SELECT THE MAX NUMBER OF ITEMS ON A PAGE AND USE A SELECTOR TO BRING THE NUMBER BACK //
         items = JSON.parse(items);

         return items;
     },
     pages: function($) {

        var pages = $('div.list-tool-pagination').text();
        pages = pages.match(/[0-9]+/g).pop();  // FOR NEWEGG ALL WE NEEDED TO DO IS GRAB THE PAGES FROM THE PAGINATION ON THE PAGE, WE ONLY DID THIS BECAUSE IT HAS NO MAX PRODUCT VALUE //
        pages = JSON.parse(pages);
        
        return pages

        
     }
}
var Category = {
    name: function($) {
        var name = $('ol.breadcrumb li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}
