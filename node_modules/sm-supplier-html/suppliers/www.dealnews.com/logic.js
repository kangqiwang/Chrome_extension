var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf("."))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf("."));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
           // result.push(info)

           if (info.price != null && info.image.startsWith("http")) {
            result.push(info)
        }
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1.headline-xxlarge').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        return 'unchecked';
    },
    price: function ($) {
        var price = $('div.unit.size1of4.signpost > div > div.price.price-pop').text().replace(/\s+/g, " ").trim();;

        if (price.includes('$')) {
            //price = getPrice(price);
            price = price.match(/[0-9]+/g).pop();
        } else {
            price = null;
        }

        return price;
    },
    image: function ($) {
        var image = $('div.unit.size1of4.signpost > div > div.art-image > a > img').attr('src');

        return image;
    },
    description: function ($) {
        var des = $('div.article-body').text().replace(/\s+/g, " ").trim();

        return des;
    }
}

var Search = {
    container: function ($) {
        var product = $('div.content-view');

        return product;
    },
    name: function ($, product) {
        var name = $(product).find('.media-overlay-link').text();
        name = cleanName(name);

        return name;
    },
    price: function ($, product) {
        var price = $(product).find('div.callout-group').text().trim();;

        price=getPrice(price+'.00')
        // if (price.indexOf('$') > -1) {
        //     price = price.match(/[0-9]+/g).pop();
        // } else {
        //     price = null;
        // }

        return price;
    },
    url: function ($, product) {
        var url = $(product).find('a.media-overlay-link').attr('href');
        return url;
    },
    image: function ($, product) {
        var image = $(product).find('a.attractor img').attr('data-bg-src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('div.main.opts-accompanying').text().match(/[0-9]+/g)[1];
        items = JSON.parse(items);

        return items;
    },
    pages: function ($) {
        var items = $('div.main.opts-accompanying').text().match(/[0-9]+/g)[1];
        var products = $('div.main.opts-accompanying').text().match(/[0-9]+/g).pop();

        var pages = products / items;
        pages = Math.ceil(pages);

        return pages;
    }
}

var Category = {
    name: function ($) {
        var name = $('h1.lead-heading').text().trim();
        name = cleanName(name);

        return name;
    }
}
