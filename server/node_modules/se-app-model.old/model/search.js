const Base = require('../lib/mongo/base')
const mongodb = require('mongodb')

class Search extends Base {

    constructor(config) {
        super(config, 'search')
    }

    restructureData(records) {
        var result = []
        var country = this.country
        records.map((r) => {
            result.push(searchRestructure(country, r))
        })
        return result
    }

    save(payload, next) {
        payload.status = 'QUEUED'
        payload.created = new Date().toISOString();
        this.insert(payload, (err) => {
            if(err) {
                next(err)
            } else {
                payload.searchId = payload._id.toString();
                delete  payload._id;
                next(null, payload);
            }
        })
    }

    saveStore(payload, next) {
        this.findById(payload.searchId, (err, result) => {

            if(err) {
                next(err)
            } else {

                var record = result;
                if(record) {
                    record.updated = new Date().toISOString();
                    record.store = payload.store;
                    record.status = 'COMPLETED';

                    this.update({
                        query: {
                            _id: mongodb.ObjectID(payload.searchId)
                        },
                        update: record
                    }, (err, result) => {
                        next(err, record)
                    })
                } else {
                    next('SEARCH_DOES_NOT_EXIST')
                }


            }
       })
    }

}

module.exports = Search