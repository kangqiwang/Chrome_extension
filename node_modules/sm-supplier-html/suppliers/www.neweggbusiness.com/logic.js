var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = neweggbusiness =  {
    "useJavascript": true,
    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            if(info.price !== null) {
            result.push(info)
        }
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('#grpDescrip_0').html();
        name = cleanName(name);

        if(name === null) {
            name = $('#itemDesc h2').text();
        }

        return name;
    },

    inStock: function($) {
        var isInStock = true;
        var refurbished = $('h2').html();
        var checkstock = $('#addToCartButton .soldOut').html();


        if(refurbished !== null) {
            refurbished = refurbished.toLowerCase();
            if(refurbished.indexOf('refurbished') > -1) {
                isInStock = false;
            }
        }

        if(checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if(checkstock.indexOf('not available') > -1) {
                isInStock = false;
            }
        }


        return isInStock;
    },
    price: function($) {
        var price = $('.currentPrice').attr('content');
        price = getPrice(price);
        return price;
    },
    image: function($) {

        var image = $('.itemImage img').attr('src');
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.item-list-warp .col-3');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('h5.item-desc a').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.item-price-now').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('h5.item-desc a').attr('href');
        return url;
    },

    image: function($, product) {
        var image = $(product).find('div.item-img img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        return parseInt($('div.item-list-warp .col-3').length);
     },
     pages: function($) {
        var numitems = $('div.item-list-warp .col-3').length;

        var products = $('div.page-title').text();
        products = products.match(/[0-9]+/g).pop();
        
        var sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('div.page-title h2').not('span').text();
        if(name.indexOf('-') > -1) {
            name = name.split('-').shift();
        }
        name = cleanName(name);
        return name;
    }
}
