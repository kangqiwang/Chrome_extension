var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "us"

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "us"
             //result.push(info)

            if(info.price !== null) {
                result.push(info)
            }

        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}


var Product = {
    name: function($) {
        var name = $('h1.pdp-header-title').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('#price-display').html();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img.active').attr('src');
        image = 'http:' + image;
        return image;
    }   
}

var Search = {
    container: function($) {
        var searchProducts = $('.product-thumb');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('span.product-thumb-title').text();
        name - cleanName(name);
        return name;
    },
    price: function($, product) {
        var salePrice = $(product).find('.product-thumb-price.discount').html();
        var standardPrice = $(product).find('.product-thumb-price').html();
        salePrice = getPrice(salePrice);
        standardPrice = getPrice(standardPrice);

        if (salePrice == null)   
       {   
        var price = standardPrice 
       }     
        else   
       {   
        var price = salePrice 
       }  

        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('.product-thumb-details a');
        if(anchor) {
            url = 'https://www.evo.com' + $(anchor).attr('href');
        }
        return url;
    },  
    image: function($, product) {
        var image = $(product).find('a.product-thumb-image-wrapper img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('.product-thumb');
        return parseInt(items.length);
     },
     pages: function($) {
        var numitems = $('.product-thumb').length;

        var products = $('div.results-utilities-top span.results-count').text();
        products = products.match(/[0-9]+/g).pop();

        var sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('h1.js-fixed-header').text();
        name = cleanName(name);
        return name;
    }
}
