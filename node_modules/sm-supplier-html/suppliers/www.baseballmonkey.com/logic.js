var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockchecker = require ('../../lib/inStockCheck.js')
module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf("."))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf("."));            
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us'
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('div .product-name h1').html();
        name = cleanName(name)
        return name;
    },
    inStock: function($) {
        var inStock= true
        var stockInfo=$('p[itemprop="availability"]').text()
        inStock=instockchecker(stockInfo,inStock)
        return inStock;

    },
    price: function($) {
        var price = $('p.regular-price span.price').html();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('div.product-image a img').attr('src');
        return image;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('li.item');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('h2.product-name a').html();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('p.regular-price span.price').html();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('div.quick-hover a img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('ul.dropdown-menu').text();
            
            if(items === ""){
                return null
            }else { 
                items = items.match(/[0-9]+/g).pop()
                items = JSON.parse(items);
            }

        return items;

     },
     pages: function($) {
        var pages = $('div.pagination ul.nav').text();
        
        if(pages === ""){
            return null
        }else {
            pages = pages.match(/[0-9]+/g).pop();
            pages = JSON.parse(pages);
        }

        return pages

     }
}

var Category = {
    name: function($) {
        var name = $('div.category-description h1').text();
        name = cleanName(name);
        return name;
    }
}
