var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        //info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1.header-1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var inStock = true;

        var name = $('h1.header-1').text().toLowerCase();
        if (name.indexOf('currently out of stock') > -1) {
            inStock = false;
        }

        return inStock;
    },
    price: function ($) {
        var price = $('div.view-product__standard-price').text();
        price = getPrice(price)
        return price;
    },
    image: function ($) {
        var image = $('img.view-product-image-print').attr('src');
        return image;
    },
    /*
    description: function($) {
        var description = $('div.description').text();
        description = description.replace(/(\r|\n|\r\n)/gm, ' ').replace(/\s+/gm, ' ').trim();
        return description;
    }
    */
}

var Search = {
    container: function ($) {
        return $('div.hz-product-card');
    },
    name: function ($, product) {
        var name = $(product).find('.hz-product-card__product-title').text();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('.hz-product-price').last().text();
        if (price) {
            if (price.indexOf('.') === -1) {
                price = price + '.00'
            }
            price = getPrice(price);
        }
        return price;
    },
    url: function ($, product) {
        var url = $(product).find('.hz-product-card__link').attr('href');
        return url;
    },
    image: function ($, product) {
        var image = $(product).find('.hz-image-container img').attr('src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        return 36;
    },
    pages: function ($) {
        var products = $('span.pagination-text').text();
        products = products.match(/[0-9,]+/gm).pop().replace(',', '');


        var sum = products / 36;
        return Math.ceil(sum);
    }
}

var Category = {
    name: function ($) {
        var name = cleanName($("div.headerContainer h1.header-1").text().replace(/[0-9]|,/g, ''));

        if (name.indexOf("and") !== - 1) {
            return name.replace("and", "&");
        } else {
            return name;
        }
    }
}
