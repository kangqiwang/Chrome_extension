var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var instockCheck =require('../../lib/inStockCheck')

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1[itemprop="name"]').text();
        name = cleanName(name);

        return name;
    },
    inStock: function($) {
        var instock=true
        var check = $('.rightColumn').last().text()
        instock =instockCheck(check,instock)
        return instock
    },
    price: function($) {
        var price = $('span[itemprop="price"]').attr('content');
        price = getPrice(price);

        return price;
    },
    image: function($) {
        var image = $('div.media-item img').attr('src');

        return image;
    },
    description: function($) {
        $('div.overview span.title').remove();
        var description = $('div.overview').text().trim().split('\n')[0].trim();

        return description;
    }
}

var Search = {
    container: function($) {
        var product = $('ul.productColumns li.product');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('span.description a').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.price').text();
        price = getPrice(price);

        return price;
    },
    url: function($, product) {
        var url = $(product).find('span.description a').attr('href');
        url = 'https://www.scan.co.uk' + url;

        return url;
    },
    image: function($, product) {
        var image = $(product).find('.image img').attr('src');

        return image;
    }
}
//
//  No pagination, only one page
//
// var Pagination = {

//      items: function($) {
//          var itemsCountOnPage = $('ul.productColumns li.product').length;;

//          return itemsCountOnPage;
//      },
//      pages: function($) {
         
//      }
// }

var Category = {
    name: function($) {
        var name = cleanName($("div.category h1").text());
        var firstCom = name.indexOf("'") + 1;
        var secondCom = name.lastIndexOf("'");
        
        return name.slice(firstCom, secondCom);
    }
}