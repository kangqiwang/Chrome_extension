var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
// Pagination not needed
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = pcworldbusiness = {
    "useJavascript": true,
    "usePhantom": "pcworldBusiness",

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
            
        });

        return result
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('span.prod-title').text();
        //var name2 = $('div.productType').text().replace('\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t', '');
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        let inStock = true
        let aviliability = $('.user-msg.alert-msg.msg-outOfStock').text()
        var check = $('.user-msg alert-msg').text()
        inStock  = inStockCheck(check,inStock)
        inStock=inStockCheck(aviliability,inStock)
        return inStock;
    },

    price: function ($) {
        var price = $('div.prod-size-price').text();
        var newPrice= $('div.prod-size-price span').text()
        if(newPrice !==''){
            ('this is the newPrice',newPrice)
            price = newPrice
        }
        price = getPrice(price);
        return price;
    },

    image: function ($) {
        var img = $('.image-prod-zoom-trigger.js-prod-zoom-trigger img').attr('src')
        return 'https:'+img
    },

    description: function ($) {
        var description = $('.moreDescription').text()
        if (description !== "") {
            return description.replace(/(\r\n|\n|\r)/gm, "");
        }
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.product-container');
        return searchProducts;
    },

    name: function ($, product) {
        var name = $(product).find('h3.prod-title').text();
        name = cleanName(name)
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('div.prod-price').html();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = 'https://www.hollandandbarrett.com' + $(anchor).attr('href');
        }
        return url;

    },
    image: function ($, product) {
        var img = $(product).find('img').attr('src');
        return 'https:' +  img;

    }
}

var Category = {
    name: function ($) {
        var name = $('div.categoryGray h1').text();
        name = cleanName(name);
        return name;
    }
}
