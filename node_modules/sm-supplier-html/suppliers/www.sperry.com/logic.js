var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');


module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1.product-name-v2').text();
        name = cleanName(name);

        return name;
    },
    inStock: function($) {
return "UNCHECKED"
},
    price: function($) {
        var price = $('span.price-sales').text();
        price = getPrice(price);

        return price;
    },
    image: function($) {
        var image = $('div.zoomWindowContainer div').css('background-image');
        image = image.replace('url("', '').replace('")', '');

        return image;
    },
    description: function($) {
        var description = $('div.pdp-drawer.active.description div.pdp-drawer-content').text().replace(/\s+/g, " ").trim();

        return description;
    }
}

var Search = {
    container: function($) {
        var product = $('div.product-tile');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('a.name-link').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.product-sales-price'). text();
        price = getPrice(price);

        return price;
    },
    url: function($, product) {
        var url = $(product).find('a.name-link').attr('href')

        return url;
    },
    image: function($, product) {
        var image = $(product).find('a.thumb-link img').attr('src');

        return image;
    }
}
//
// There is no pagination. New products downloads by ajax
//
/*var Pagination = {

     items: function($) {

     },
     pages: function($) {

     }
}*/
var Category = {
    name: function($) {
        var name = cleanName($("div#main h1").text());
        var firstApos = name.indexOf('"');
        var secondApos = name.lastIndexOf('"');

        return name.slice(firstApos + 1, secondApos);
    }
}