var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = replace =  {
    "useJavascript": true,

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf("."))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.barcode = Product.barcode($)
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf("."));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('.productHeading').text();
        name = cleanName(name);
        return name;
    },

    inStock: function($) {
        var isInStock = true;
        var contentarea = $('.indicator').html()
        if(contentarea !== null) {
            if((contentarea.indexOf('Pre-order') > -1)
            || (contentarea.indexOf('Awaiting stock') > -1))
            {
                isInStock = false
            }
        }
        return isInStock
    },
    price: function($) {
        var price = $('dd.productNowPrice').text();
        price = getPrice(price.trim()+'.00');
        return price;
    },
    image: function($) {
        var image = $(".amp-zoom-overflow img").attr('src');
        return image;
    },
    barcode: function($) {
        var barcode = $('span#productEAN').text();
        
        if(barcode !== "") {
            barcode = barcode.match(/\d+/)[0];
        } else {
            barcode = "NO BARCODE"
        }

        return barcode
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('#products .product');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('h3').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('.productNowPrice').clone().children().remove().end().text()
            price = getPrice(price)

        if(price) {
            return price
        } else{
            price = $(product).find('.productPrice').last().text();
            price = getPrice(price)
            if(price){
                return price
            }else{
                price =$(product).find('.productNowPrice').clone().children().remove().end().text()
                price = getPrice(price.trim()+'.00')
                return price
            }
        }

       // var oldprice = $(product).find(".productPrice").text()
       // price= getPrice(price)
       // oldprice = getPrice(oldprice)
       // if(price){
       //     return price
       // }else{
       //     return oldprice
       // }

        
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('.productMainImage img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('div.productsPerPage').text();
        
        if(items !== "") {
            items = items.match(/[0-9]+/g)[1];
            items = parseInt(items);
        }else {
            (Search.container($).length)
             if(Search.container($).length > 0) {
                items = 1;
            }
        }

        return items;

     },
     pages: function($) {
        var items = $('div.productsPerPage').text();
        
        if(items !== "") {
            items = items.match(/[0-9]+/g)[1];
            items = parseInt(items);
        }else {
             if(Search.container($).length > 0) {
                items = 1;
            }
        }

        var result = null;
        var products = $('div.productsPerPage').text();
        
        if(products !== "") {
            products = products.match(/[0-9]+/g)[6];
            result = Math.ceil(products / items);
        }else {
            if(Search.container($).length > 0) {
                result = 1;
            }
        }
        return result

        
     }
}

var Category = {
    name: function($) {
        var name = $('h1.galleryHeading span[itemprop*="name"]').text();
        name = cleanName(name);
        return name;
    }
}

