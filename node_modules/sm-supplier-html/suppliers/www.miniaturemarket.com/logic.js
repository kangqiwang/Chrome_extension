var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "us"

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            if (Search.inStock($, product).indexOf('Out of Stock') < 1) {
                var info = new SearchPageInfo()
                info.name = Search.name($, product)
                info.price = Search.price($, product);
                info.url = Search.url($, product);
                info.image = Search.image($, product);
                info.country = "us",
                    //    info.inStock = Search.inStock($, product)
                    result.push(info)
            }
        });

        return result
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1.product-name').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var availability = $('div.availability').text()
        var isInStock = false

        if (availability) {
            if (availability.indexOf('In stock') > -1) {
                isInStock = true
            }
        }

        return isInStock

    },
    price: function ($) {
        var price = $('.regular-price').html();
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('img#image').attr('src');
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('.item');
        return searchProducts;
    },
    name: function ($, product) {
        var name = $(product).find('h3 a').html();
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('p.special-price .price').html();
        price = getPrice(price);
        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('h3.product-name a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return 'https:' + url;
    },
    image: function ($, product) {
        var image = $(product).find('.info-group img').attr('src');
        image = 'http:' + image;
        return image;
    },
    inStock: function ($, product) {
        var inStock = $(product).find('div.info-group').text()
        return inStock;
    }

}

var Pagination = {

    items: function ($) {
        var items = $('.item');
        items = items.length;
        return parseInt(items);

    },
    pages: function ($) {
        var items = $('.item');
        items = items.length;

        var products = $('div.product-count').text();
        products = products.match(/[0-9]+/g).pop();


        sum = products / items
        return Math.ceil(sum)
    }
}

var Category = {
    name: function ($) {
        var name = $('div.category-title').text();
        name = cleanName(name);
        return name;
    }
}
