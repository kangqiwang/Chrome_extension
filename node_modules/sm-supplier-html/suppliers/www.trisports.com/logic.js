var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var instockCheck= require('../../lib/inStockCheck.js')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "us"

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "us"
            result.push(info)
        });

        return result
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1').html();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        let stock = true
        let check = $('.pd_outofstock').text()
        stock = instockCheck(check,stock)
        return stock;

    },
    price: function ($) {
        var price = $('.pd_prices').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('#ysw-media-image img').attr('src');
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.dpproduct');
        return searchProducts;

    },
    name: function ($, product) {
        var brand = $(product).find('div.dpmanname').text()
        var name = $(product).find('div.dpheading20').text()

        name = brand + " " + name

        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('div.dpprice20').html();
        price = getPrice(price);

        if (price != null) {
            price = price
        } else {
            price = getPrice($(product).find('div.dppricewrap').html())
        }

        return price;

    },
    url: function ($, product) {
        var url = $(product).find('a').attr('href');
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('div#ysw-paging li.ysw-product');
        items = items.length;
        return parseInt(items);

    },
    pages: function ($) {
        return 1;
    }
}

var Category = {
    name: function ($) {
        var name = $('div.ysw-section-content h1').text();
        name = cleanName(name);
        return name;
    }
}
