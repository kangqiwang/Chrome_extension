var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var addCheckDigit = require('../../lib/barcode.js').addCheckDigit;
var isValid = require('../../lib/barcode.js').isValid;

module.exports = data = {}
module.exports = replaceWithwebAddressChangeToCamelCase = {
    "useJavascript": true,

    'sku': (url) => {
        var url = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""))
        url = url.split('?')[0]
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []
        let category = Search.category($)

        var items = Search.container($)
        //  (items)
        items.map(function (product) {

            function formatBarcode(str) {
                var iLen = String(str).length;
                if (!isValid(str)) {
                    return addCheckDigit(String(str).substring(iLen, iLen - 12));
                } else {
                    return str
                }
            }

            let Url = 'https://www.walmart.com' + product.productPageUrl;
            let sku = Url.substring(Url.lastIndexOf("/") + 1, Url.lastIndexOf(""));

            var info = new SearchPageInfo()
            info.name = cleanName(product.title)
            info.sku = sku.split('?')[0]
            if (product.primaryOffer.offerPrice) {
                info.price = product.primaryOffer.offerPrice.toString();
            } else {
                info.price = null
            }
            info.url = Url;
            info.image = product.imageUrl;
            info.barcode = formatBarcode(product.upc)
            info.country = 'us';
            info.productId = product.productId;
            info.usItemId = product.usItemId;
            info.description = product.description;
            info.customerRating = product.customerRating;
            info.numReviews = product.numReviews;
            info.sellerId = product.sellerId;
            info.sellerName = product.sellerName;
            info.enableAddToCart = product.enableAddToCart;
            info.canAddToCart = product.canAddToCart;
            info.showPriceAsAvailable = product.showPriceAsAvailable;
            info.seeAllName = product.seeAllName;
            info.seeAllLink = product.seeAllLink;
            info.itemClassId = product.itemClassId;
            info.primaryOffer = product.primaryOffer;
            info.fulfillment = product.fulfillment;
            info.inventory = product.inventory;
            info.quantity = product.quantity;
            info.blitzItem = product.blitzItem;
            info.marketPlaceItem = product.marketPlaceItem;
            info.twoDayShippingEligible = product.twoDayShippingEligible;
            info.pickupDiscountEligible = product.pickupDiscountEligible;
            info.shippingPassEligible = product.shippingPassEligible;
            info.preOrderAvailable = product.preOrderAvailable;
            info.categories = category

            result.push(info)
            // 
            // if (info.price !== null) {
            //     result.push(info)
            // }
        });


        return result
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('.ProductTitle').text();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var inStock = true;
        var checkstock = $('span.copy-mini').text();
        var preorder = $('button.btn-primary').text();
        var itemavailability = $('div.prod-BotRow').html();
        let outOfStock = $('.display-block-xs').text().toLowerCase()

        var refurbished = $('div.product-short-description').html();
        var refurbished2 = $('h1[itemprop*="name"] span').html();

        if (checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if (checkstock.indexOf('out of stock') > -1) {
                inStock = false;
            }
        }
        if (preorder !== null) {
            preorder = preorder.toLowerCase();
            if (preorder.indexOf('preorder') > -1) {
                inStock = false;
            }
        }
        if (itemavailability !== null) {
            itemavailability = itemavailability.toLowerCase();
            if (itemavailability.indexOf('this item is no longer available') > -1) {
                inStock = false;
            }
        }
        if (refurbished !== null) {
            refurbished = refurbished.toLowerCase();
            if (refurbished.indexOf('refurbished') > -1) {
                inStock = false;
            }
        }
        if (refurbished2 !== null) {
            refurbished2 = refurbished2.toLowerCase();
            if (refurbished2.indexOf('refurbished') > -1) {
                inStock = false;
            }
        }

        if (outOfStock.indexOf('out of stock') > -1) {
            inStock = false;
        }

        return inStock;

    },
    price: function ($) {
        var price = $('span.price-group').text();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('img').attr('src');
        return image;

    },
    description: function ($) {
        var description = $('div#about-item .AboutProductSection div.product-about').text();

        if (description !== null) {
            return description.replace(/(\r\n|\n|\r)/gm, "");
        }
    }
}

var Search = {
    container: function ($) {

        // var searchProducts = $('div.BrowseProductGrid div.Grid-item.Grid-item--row.Grid-item--wrap');
        // return searchProducts;

        var allHTML = $.html()

        var justData = allHTML.match(/<script>window.__WML_REDUX_INITIAL_STATE__.*?<\/script>/g)
        (justData)


        if (justData) {
            var json = justData[0].replace('<script>window.__WML_REDUX_INITIAL_STATE__ = ', '')
            json = json.replace(';</script>', '')


            var parsed = JSON.parse(json)


            if (parsed && parsed.preso) {

                return parsed.preso.items
            } else {
                return []
            }
        } else {
            return []
        }

    },
    category: ($) => {
        let name = {}
        let level = 1
        $( "ol.breadcrumb-list li" ).each(function( index ) {
            // ( level++ + ": " + $( this ).text() );
            name['level' + level++] = $( this ).text()
        });

        return name;
    },
    // name: function($, product) {
    //     var name = $(product).find('a.product-title-link').text();

    //     if(name === "") {
    //         name = $(product).find('h3.tile-heading').text();
    //     }

    //     name = cleanName(name);
    //     return name;

    // },
    // price: function($, product) {
    //     var price = $(product).find('div.search-result-productprice').text();

    //     if(price === "") {
    //         price = $(product).find('span.price-display').text();
    //     }

    //     if (price.indexOf('-') > -1) {
    //         price = null
    //     }

    //     price = getPrice(price);
    //     return price;

    // },
    // url: function($, product) {
    //     var url = null;
    //     var anchor = $(product).find('a');
    //     if(anchor) {
    //         url = 'https://www.walmart.com' + $(anchor).attr('href');
    //     }
    //     return url;

    // },
    // image: function($, product) {
    //     var image = $(product).find('img.Tile-img').attr('src');

    //     if(image === undefined) {
    //         image = $(product).find('img.product-image').attr('src');
    //     }

    //     if(image.indexOf('https:') > -1) {
    //         return image;
    //     } else {
    //         image = "https:" + image
    //     }
    //     return image;

    // }
}

var Pagination = {

    items: function ($) {
        var items = $('div.result-summary-container').text();

        if (items !== "") {
            items = items.match(/[0-9]+/g).shift();
        } else {
            if (Search.container($).length > 0) {
                items = 1
            }
        }

        return parseInt(items);

    },
    pages: function ($) {
        var items = $('div.result-summary-container').text();
        if (items !== "") {
            items = items.match(/[0-9]+/g).shift();
        } else {
            if (Search.container($).length > 0) {
                items = 1
            }
        }

        var result = null
        var products = $('div.result-summary-container').text();
        if (products !== "") {
            products = products.match(/[0-9]+/g).pop();
            result = Math.ceil(products / items)
        } else {
            if (Search.container($).length > 0) {
                result = 1
            }
        }

        return result
    }
}

var Category = {
    name: function ($) {
        var name = $('ol').html();
        name = cleanName(name);
        return name;
    }
}
