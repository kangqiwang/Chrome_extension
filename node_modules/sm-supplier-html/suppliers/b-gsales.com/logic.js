var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck=require('../../lib/inStockCheck')
module.exports = bgSales =  {
    "useJavaScript": true,

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.barcode = Product.barcode($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.barcode = Search.barcode($, product);
            info.image = Search.image($, product);
            info.country = 'us'
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name =$('h1.page-title').html();
        name = cleanName(name);
        return name;


    },
    inStock: function($) {
        var inStock = true
        var check=$('p.form-control-static.product-price-net').eq(8).text()
        inStock=inStockCheck(check,inStock)
        return inStock

    },
    price: function($) {
        var price = $('span[itemprop="offers"]').text();
        price = getPrice(price);
        return price;

    },
    barcode: function($) {

    },
    image: function($) {
        var image = $('div.thumbnail img').attr('src');
        image = 'https://b-gsales.com' + image;
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div .product-group-item');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('h4.product-group-item-title').html();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('h4.custom-price-header').html();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = 'https://b-gsales.com' + $(anchor).attr('href');
        }
        return url;

    },
    barcode: function($, product) {
        var barcode =$(product).find('div.product-group-item div:nth-child(6) span').html();
        return barcode;

    },
    image: function($, product) {
        var image = $(product).find('div.thumbnail a img').attr('src');
        image = 'https://b-gsales.com' + image;
        return image;
    }
}

var Pagination = {

     items: function($) {
         var items = parseInt($('div .product-group-item').length);

        if(items) {
            return items;
        } else {
            return null;
        }
     },
     pages: function($) {
        var maxItems = this.items($);

        var pages = $('ul#pageControl li.last a').attr('href');


        if(maxItems && pages) {
            return parseInt(pages.match(/[0-9]+/g));;
        } else if(!pages && maxItems){
            return 1;
        } else {
            return null;
        }

/*        var result = null;
       
        if(pages !== undefined){
            pages = pages.match(/[0-9]+/g);    
            result = parseInt(pages)
        }else {
            if(Search.container($).length > 0) {
                result = 1;
            }
        }
         
        return result;*/
     }
}

var Category = {
    name: function($) {
        var name = $('title').text();
        name = cleanName(name);
        return name;
    }
}
