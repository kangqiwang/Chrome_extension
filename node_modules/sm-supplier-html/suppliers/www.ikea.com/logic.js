var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
// Pagination not needed
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = ikea = {
    "useJavascript": true,
    "usePhantom": "ikea.phantom.js",

    'sku': (url) => {
        return url.substring(url.lastIndexOf("s") + 2, url.lastIndexOf("/"))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("s") + 2, Search.url($, product).lastIndexOf("/"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('span.productName').text();
        var othername= $('span.productType').text()
        //var name2 = $('div.productType').text().replace('\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t', '');
        name = cleanName(name+' '+othername);
        //name = name + ' ' + name2;
        return name;
    },

    inStock: function ($) {
        var price = $('#prodPrice').text();
        price = getPrice(price);
        if(price){
            return true
        }else{
            return false
        }
        
    },

    price: function ($) {
        var price = $('#prodPrice').text();
        price = getPrice(price);
        return price;
    },

    image: function ($) {
        var img = $('img#productImg').attr('src');
        img = 'http://www.ikea.com' + img;
        return img;
    },

    description: function ($) {
        var description = $('div.salesArguments').text();

        if (description !== "") {
            return description.replace(/(\r\n|\n|\r)/gm, "");
        }
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.threeColumn.product');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('span.productTitle').text();
        var name2 = $(product).find('span.productDesp').text();
        name = cleanName(name);
        name = name.split(' ')[0]
        name2 = cleanName(name2);
        name = name + ' ' + name2;
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('span.price.regularPrice').text();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('.productDetails a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return 'http://www.ikea.com' + url;

    },
    image: function ($, product) {
        var img = $(product).find('div.image img').attr('src');
        img = 'http://www.ikea.com' + img;
        return img;

    }
}

var Category = {
    name: function ($) {
        var name = $('div.categoryGray h1').text();
        name = cleanName(name);
        return name;
    }
}
