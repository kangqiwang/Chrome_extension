const Base = require('../lib/mongo/base');

class Affiliate extends Base {

    constructor(config) {
        super(config, 'affiliate');
    }

    addAffiliate(payload, next) {
        if (payload.hasOwnProperty('email') && payload.hasOwnProperty('first_name') && payload.hasOwnProperty('last_name') && payload.hasOwnProperty('country') && payload.hasOwnProperty('currency')) {
            let newAffiliate = {
                email: payload.email,
                first_name: payload.first_name,
                last_name: payload.last_name,
                created_at: new Date(),
                updated_at: null,
                country: payload.country,
                currency: payload.currency, // USD || GBP
                affiliate_url: payload.affiliate_url || '',
                affiliate_dashboard_url: payload.affiliate_dashboard_url || '',
                affiliate_code: payload.affiliate_code || '',
                valid: payload.valid || false,
                affiliateMessage: payload.message || 'This message appears on the sign up form',
                plan: payload.plan || null
            };
            this.insert(newAffiliate, next);
        } else {
            next('INVALID_AFFILIATE');
        }
    }

    updateAffiliate(payload, next) {
        if (payload && payload.query && payload.update) {
            payload.update.$set.updated_at = new Date();
            this.update(payload, next);
        } else {
            next('INVALID_AFFILIATE');
        }
    }

    findByEmail(payload, next) {
        this.findOne({
            email: payload.email
        }, (err, result) => {
            if (err) {
                next(err);
            } else {
                if (result) {
                    next(null, result);
                } else {
                    next(null, {});
                }
            }
        });
    }

    findByCode(payload, next){
        this.findOne({
            affiliate_code: payload.affiliateCode
        }, (err, result) => {
            if (err) {
                next(err);
            } else {
                if (result) {
                    next(null, result);
                } else {
                    next(null, {});
                }
            }
        });
    }

    getAllAffiliates(payload, next) {
		this.find(payload, next)
	}
}

module.exports = Affiliate;
