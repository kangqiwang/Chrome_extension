const Base = require('../lib/mongo/base')
const md5 = require('md5')
const mongodb = require('mongodb')

class Html extends Base {

    constructor(config) {
        super(config, 'html')
    }
    
    findByUrl(url, done) {
        var id = md5(url)
        
        this.find({
            _id: id
        }, (err, result) => {
            done(err, result)
        })
    }

    createNewSearch(payload, next) {

        this.insert(payload, (err, data) => {
            if(err) {
                console.error(err);
                next(err);
            } else {
                // console.log(id)

                next(null, id);
            }
        })
    }

    endSearch(payload, next) {
        this.insert(payload,(err,data) => {
            if(err) {
                //console.error(err)
                next(err)
            } else {
                //console.log(data.length)
                next(null,data)
            }
        })
    }

    discardSearch(payload, next) {
        this.remove(payload, (err,data) => {
            if(err){
                next(err)
            }else{
                next(null,data)
            }
        })
    }

    savePageData(payload, next) {
        //console.log(payload)
        
        this.insert(payload, (err, data) => {
            if(err) {
                console.error(err);
                next(err);
            } else {
                //console.log(data);
                next(null, data);
            }
        })
    }

    getSupplierData(payload, next){
        let payload = {
            live: true,
            fields: {
                name: 1,
                domain: 1
            }
        };
        this.find(payload, next);

    }

    getSearchData(id, next) {
        next()
    }

}

module.exports = Html