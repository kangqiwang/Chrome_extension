var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');

module.exports = allbeauty = {
    "useJavascript": true,

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            let url = Search.url($, product)+''; // Define the url as being the Search.url + a null string.
            info.name = Search.name($, product);
            info.sku = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            if (url.length){
                result.push(info)
            }
        });

        return result
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }


}

var Product = {
    name: function ($) {
        var name = $('p.descriptionText strong').text();
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        var isInStock = true;


        return isInStock;
    },
    price: function ($) {
        var price = $('span.ourPrice').text();
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $("div.productImageContainer img").attr('src');
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.product');
        return searchProducts;
    },
    name: function ($, product) {
        var brand = $(product).find('h3 a').text();
        var name = $(product).find('p.productName').text();
        var size = $(product).find('p.productDesc').text();

        name = brand + ' ' + name + ' ' + size;
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('.ourPrice').text();
        price = getPrice(price);
        return price;
    },
    url: function ($, product) {
        var url = $(product).find('h4 a').attr('href');
      //  var anchor = $(product).find('a');
      //  if (anchor) {
      //      url = $(anchor).attr('href');
      //  }
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('a img').attr('src');
        return image;
    }
}

var Category = {
    name: function ($) {
        return cleanName($("div.left h2").text());
    }
}
var Pagination = {

    items: function ($) {
        return Search.container($).length;
    },
    pages: function ($) {

        var result = null;
        var pages = $("p.paging").text().split("Next")[0].match(/[0-9]+/g);
        if (pages !== null) {
            result = parseInt(pages.pop())
        } else {
            if (Search.container($).length > 0) {
                result = 1
            }
        }


        return result;
    }
}

