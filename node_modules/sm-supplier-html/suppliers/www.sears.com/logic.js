var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var incheckstock = require('../../lib/inStockCheck.js')

function checkSKU(str) {
    let sku;
    if (str.indexOf('?') > -1) {
        sku = str.split('?')[0]
    } else {
        sku = str
    }
    ('CHECKING SKU:  ',sku.trim())
    let rx = /^p?-/.test(sku.trim());

    if (rx == true) {
        return sku
    } else {
        return -1
    }
}
module.exports = replaceWithwebAddressChangeToCamelCase =  {
    "useJavascript" : true,
    "usePhantom": "sears.phantom.js",


    'sku': (url) => {
        url = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""))
        return checkSKU(url.replace(".htm", "").trim())
    },


    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []
        let skuError = 0

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            var sku = Search.url($, product).split('/')[4].split('?')[0]
            info.sku = checkSKU(sku)
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us'

            if (info.sku < 0) {
                console.error(skuError)
                skuError++
            } else(
                result.push(info)
            )
        });

        return result
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('h1.product-title').html();
        name = cleanName(name);
        if(name){
            return name;
        }else{
            name=$('h1.pro-title').text()
            name=cleanName(name)
            return name
        }
        

    },
    inStock: function($) {
        var inStock = true;
        var checkstock = $('').html();
        var inStoreOnly = $('span.outlined small').text();
        var redirect = $('span.shcStdHeaderReg').html();
        var refurbished = $('li.condition').html();
        var TempUnavailable = $('.product-fulfillmentNav').text();

        //inStock = incheckstock(TempUnavailable,inStock)
        if(TempUnavailable !== undefined && TempUnavailable !== null){
            if(TempUnavailable !== '') {
                TempUnavailable = TempUnavailable.toLowerCase()
                if(TempUnavailable.indexOf('shipping unavailable') > -1 ){
                    inStock = false
                }
            }
        }

        // if(checkstock !== null) {
        //     checkstock = checkstock.toLowerCase();
        //     if (checkstock.indexOf('') > -1) {
        //         inStock = false
        //     }
        // }
        // if(redirect !== null) {
        //     redirect = redirect.toLowerCase();
        //     if (redirect.indexOf('sorry, but that page is no longer available.') > -1) {
        //         inStock = false
        //     }
        // }

        // if(refurbished !== null) {
        //     refurbished = refurbished.toLowerCase();
        //     if (refurbished.indexOf('refurbished') > -1) {
        //         inStock = false
        //     }
        // }

        // if(TempUnavailable !== null) {
        //     TempUnavailable = TempUnavailable.toLowerCase();
        //     if (TempUnavailable.indexOf('temporarily unavailable') > -1) {
        //         inStock = false
        //     }
        // }
        return inStock

    },
    price: function($) {
        var price = $('h4 span.price-wrapper').html();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('img.active').attr('src');
        return image;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.card-container.card-border');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('h3[itemprop*="name"] a').html();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('span.card-price').text();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = 'http://www.sears.com' + $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('img.card-image').attr('src');
        return image;


    }
}

var Pagination = {

     items: function($) {
        var items = $('div.card-container');
        items = items.length;
        return parseInt(items);

     },
     pages: function($) {
        // var items = $('').html(); 
        // numitems = items.match(/[0-9]+/g).pop();

        var pages = $('div.select-box select option').eq("-1").text();
        var result = null;

        if(pages !== "") {
            pages = pages.match(/[0-9]+/g).pop();
            result = parseInt(pages);     
        }else {
             if(Search.container($).length > 0) {
                result = 1;
            }
        }
        
        return result;
     }
}

var Category = {
    name: function($) {
        var name = $('ul.has-breadcrumbs li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}
