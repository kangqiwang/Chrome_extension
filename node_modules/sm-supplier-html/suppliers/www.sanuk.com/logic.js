var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');


module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('h1').find('span').html('').end().text();
        name = cleanName(name);
        return name.toUpperCase();
    },
    inStock: function($) {
        var inStock = true;

        var stockMessage = $('div.availability').text();
        if (stockMessage) {
            if (stockMessage.toLowerCase().indexOf('this item is currently not available') > -1) {
                inStock = false;
            }
        }

        return inStock;
    },
    price: function($) {
        var price = $('div.price.product__price').text();
        price = price.replace(/\s+/gm, ' ').match(/[0-9.,]+/gm).pop();
        return price;
    },
    image: function($) {
        var image = $('img.primary-image').attr('src');
        return image;
    },
    description: function($) {
        var description = $('div.product-description').text();
        description = description.replace(/^\s+Description:\s+/gm, '').trim();
        return description;
    }
}

var Search = {
    container: function($) {
        return $('li.grid-tile');
    },
    name: function($, product) {
        var name = $(product).find('a.name-link').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.product-sales-price').text();
        price = price.match(/[0-9.,]+/gm).pop();
        return price;
    },
    url: function($, product) {
        return $(product).find('a.name-link').attr('href');
    },
    image: function($, product) {
        var image = $(product).find('a.thumb-link img').attr('src');
        return image;
    }
}

// var Pagination = {

//      items: function($) {

//      },
//      pages: function($) {

//      }
// }

var Category = {
    name: function($) {
        return cleanName($("ol.breadcrumb li h1 span.breadcrumb-cat a").not(".breadcrumb-last").text());
    }
}