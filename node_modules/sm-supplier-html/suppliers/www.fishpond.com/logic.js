var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = fishpond = {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            if (Search.url($, product) != undefined && Search.url($, product) != null ) {
                info.barcode = "" + Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf(""));
                info.name = Search.name($, product);
                info.sku = "" + Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf(""));
                info.price = Search.price($, product);
                info.url = Search.url($, product);
                info.image = Search.image($, product);
                info.country = 'us'
                result.push(info)
            }
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('div.b-product-info__title').text();
        name = cleanName(name);
        return name;


    },
    inStock: function ($) {
        var isInStock = true;
        var checkstock = $('div.arrives_text quantity_text').text();
        isInStock = instockCheck(checkstock,isInStock)

        return isInStock;
    },
    price: function ($) {
        var price = $('div.price-box__our').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.galleria a img').attr('src');
        return image;

    },
    description: function ($) {
        var description = $('div[itemprop="description"]').text().trim();

        if (description !== null) {
            return description.replace(/(\r\n|\n|\r|\t)/gm, "");
        }
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('.browse__item');
        if(searchProducts){
            return searchProducts;
        }else{
            searchProducts =$('.item-big__border')
            return searchProducts
        }
        

    },
    name: function ($, product) {
        var name = $(product).find('.item-block__title').last().text();
        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('.item-block__price').html();
        price = getPrice(price);
        if(price){
            return price;
        }else{
            price = $(product).find('.item-block__price').html();
            price = getPrice(price+'.00');
            return price
        }
        

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return url;
    },
    image: function ($, product) {
        var image = $(product).find('.item-middle__border a').css('background-image')

        if (image != null) {
            image = "" + image.match(/\bhttps?:\/\/\S+/gi)[0].replace('\")', '')
        } else {
            image = null
        }
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('tr.product');
        return parseInt(items.length);
    },
    pages: function ($) {
        var items = $('tr.product');
        numitems = items.length;

        var result = null;
        products = $('div.productBrowser p.smallText').text();

        if (products !== "") {
            products = products.match(/[0-9]+/g).pop();
            result = Math.ceil(products / numitems);

        } else {
            if (Search.container($).length > 0) {
                result = 1;
            }
        }

        return result
    }
}

var Category = {
    name: function ($) {
        var name = $('h1#page_title').text();
        name = cleanName(name);
        return name;
    }
}

