var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        url = url.split('?')[0]
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    },


    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            var sku = Search.url($, product).split('?')[0]
            info.name = Search.name($, product);
            info.sku = sku.substring(sku.lastIndexOf("/")+1,sku.lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us'
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('header.product-title h2[itemprop="name"]').text();
		name = cleanName(name);

        return name;
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('#van-price span[itemprop="price"] span').text();
        price = getPrice(price);
		
        return price;       
    },
    image: function($) {
        var image = $('div.owl-item li a img').attr('src');
        image = 'https:' + image;
		
        return image;
    },
    description: function($) {
        var description = $('#collapse-tab1 div p').text();

        return description;
    }
}

var Search = {
    container: function($) {
        var product = $('div.grid-uniform div.grid-item');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('p').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.product-item--price').text();
        price = getPrice(price);

        return price
    },
    url: function($, product) {
        var url = $(product).find('a').attr('href');

        return url;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');

        return 'https:' + image;
    }
}

var Pagination = {

     items: function($) {
         //
         // Unfortunately there is no information about items on page. So we use length property
         //
        
        var items = $('li.snize-product').length;
		
        return items;
         
     },
     pages: function($) {
         var items = $('li.snize-product').length;
        
        var products = $('div.snize-search-results-header').text();
        products = products.match(/[0-9]+/g).pop();
        
        sum = products / items;
        return Math.ceil(sum);
         
     }
}

var Category = {
    name: function($) {
        return cleanName($("a.snize-no-products-found-link").text());
    }
}