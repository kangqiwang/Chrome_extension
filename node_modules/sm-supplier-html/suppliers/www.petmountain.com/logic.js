var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var inStockCheck = require('../../lib/inStockCheck.js')
module.exports = petMountain =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.country = 'us'
        info.image = Product.image($)
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.country = 'us';
            info.image = Search.image($, product);
            result.push(info)

            // if(info.price !== null) {
            //     result.push(info)
            // }

        });

        return result
    },
     'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function($) {
        var name = $('h1').html();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        var stock = $('span[itemprop="offers"] div').text()
        var inStock = true
        inStock = inStockCheck(stock,inStock)
        return inStock;

    },
    price: function($) {
        var price = $('.pricex').html();
        price = getPrice(price);
        return price

    },
    image: function($) {
        var image = $('#main_image_img').attr('src');
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.product.g');

        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('span.product-name').text();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        var price = $(product).find('span.val').first().text();

        if(price === "") {
            price = null
        }
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = $(product).find('a').attr('href');
        return url;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}
var Pagination = {

     items: function($) {
        var items = $('div#products .item').length;
        return parseInt(items);

     },
     pages: function($) {
        var pages = $('div#pagination_top .pages').text();
        pages = pages.match(/[0-9]+/g).pop();
        return parseInt(pages);
     }
}

var Category = {
    name: function($) {
        var name = $('div#trail ul li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}

