var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck')
module.exports = minimodelshop =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk' // Please add the country //

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    // 'pagination' : function ($, next) {

    //     var info = new PaginationNumberInfo()
    //     info.items = Pagination.items($);
    //     info.pages = Pagination.pages($);

    //     return info
    // },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1').html();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var instock = true
        var check =$('span[itemprop="offers"]>table>tbody>tr').last().text()
        instock = instockCheck(check,instock)
        return instock
        // var message = $('td b:contains("Stock Level")')
        //                 .parents('tr')
        //                 .find('td:nth-child(2)')
        //                 .text();
        // var isAvailable = /\d\+? in stock/i.test(message);
        // return isAvailable; // could you use .indexOf() for the out of stock pages see biglots as example //
    },
    price: function($) {
        var price = $('span[itemprop=price]').html();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('div#sub-details img').attr('src');
        return 'http://www.minimodelshop.co.uk' + image;
    }
}

var Search = {
    container: function($) {
        var container = $('div.item');
        return container;
    },
    name: function($, product) {
        var name = $(product).find('h2.product-name').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.price').html();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var href = $(product).find('.product-name a').attr('href');
        return href;
    },
    image: function($, product) {
        var image = $(product).find('.rollover-image').attr('src');
        return image;
    }
}

// var Pagination = {

//      items: function($) {
//         var message = $('div.slhead').html();
//         var matches = /showing (\d+) items/i.exec(message);
//         if (matches) {
//             return matches[1];
//         } else {
//             return '0';
//         }
//      },
//      pages: function($) {
//         return '1';
//      }
//}

var Category = {
    name: function($) {
        var name = $('div.content h1').text();

        if(name.indexOf('now available') > -1) {
            name = name.replace("now available", "").trim();
        }
        name = cleanName(name);
        return name;
    }
}
