var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
// Pagination not needed
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'sku': (url) => {
        url = url.split("?")[0];
        return url.substring(url.lastIndexOf("-") + 1, url.lastIndexOf("."));
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($),
        info.description = Product.description($),
        info.country = 'us'


        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []


        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            var sku = Search.url($, product).split("?")[0]
            info.name = Search.name($, product);
            info.sku = sku.substring(sku.lastIndexOf("-") + 1, sku.lastIndexOf("."));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1.product-name').text();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var inStock = true
        var message = $('.availability-msg').text()
        inStock = instockCheck(message,inStock)
        return inStock

    },
    price: function ($) {
        var price = $('span.price-sales').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('img').attr('src');
        return image;

    },
    description: function ($) {
        var description = $('div.ui-accordion-content').text();
        return description;

    }

}

var Search = {
    container: function ($) {
        var searchProducts = $('div.product-tile');
        return searchProducts

    },
    name: function ($, product) {
        var name = $(product).find('div.product-name').html();
        var type = $(product).find('div.product-type').html();
        // var fragrance = $(product).find('div.productFragrance').html().replace("\n\t\t\t\t","").replace("\n\t\t\t","");
        name = cleanName(name);
        type = cleanName(type);
        return name + ' ' + type;

    },
    price: function ($, product) {
        var price = $(product).find('span.product-sales-price').html();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = 'http://www.bathandbodyworks.com' + $(anchor).attr('href');
        }
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        image = 'http://www.bathandbodyworks.com' + image;
        return image;
    }
}

var Category = {
    name: function ($) {
        var name = $('h1.page-header-p2p').text();
        name = cleanName(name);
        return name;
    }
}

