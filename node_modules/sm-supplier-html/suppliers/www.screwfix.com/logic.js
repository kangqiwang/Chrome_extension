var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.description = Product.description($)
        info.country = 'uk'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('#product_description span[itemprop="name"]').text().trim();
        name = cleanName(name);

        return name;
    },
    inStock: function($) {
        var instock =true
        var stock =$('.pr__btns').eq(1).find('div.row>div').text()
        instock =instockCheck(stock,instock)
        return instock
},
    price: function($) {
        var price = $('#product_price').text()
        price = getPrice(price);

        return price;
    },
    image: function($) {
        var image = $('#product_image_0').attr('src');

        return image;
    },
    description: function($) {
        var description = $('#product_long_description_container').text().trim();

        if (description != null) {
            return description;
        }
    }
}

var Search = {
    container: function($) {
        var product = $('.lii.lii--j2');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('.lii__title a').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('.lii_price h4').text();
        price = getPrice(price);

        return price;
    },
    url: function($, product) {
        var url = $(product).find('h3.lii__title a').attr('href');

        return url;
    },
    image: function($, product) {
        var image = $(product).find('.thumb__img--sm').attr('src');

        return image;
    },
}

var Pagination = {

     items: function($) {
         var items = $('span.pagi__show-container').text();
         items = items.match(/[0-9]+/g).pop();  
         items = JSON.parse(items);
         return items
     },
     pages: function($) {
         var items = $('span.pagi__show-container').text();
         items = items.match(/[0-9]+/g).pop();  
         items = JSON.parse(items);


         var products = $('span.title-category-itemfound').text();
         products = products.match(/[0-9]+/g).pop();  
         products = JSON.parse(products);
                    
         sum = products / items;
         return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('h1.h1wrapper__h1-special').text();
        name = cleanName(name);
        return name;
    }
}

