var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = bjs = {
    "useJavaScript": true,
    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search paget
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';

            if (info.price !== null) {
                result.push(info)
            }
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('div.product-name').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var inStock = true
        var availability = $('.product-name').text()
        inStock = instockCheck(availability,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('span.shipping-status').text();
        price = getPrice(price);
        return price;
    },
    
    image: function ($) {
        var image = $('div.RICHFXImageDragBox a').attr('href');
        return image;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('gb-bjs-tile');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('h2').text()
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('#gb-bjs--tile__price').text();
        //var newPrice = $(product).find('.gb-bjs--tile__price').text()
        price = getPrice(price);

        // if(price){
            return price;
        // }else{
        //     newPrice=getPrice(newPrice)
        //     return newPrice
        // }
    },
    url: function ($, product) {
        var anchor = $(product).find('a').first()
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return "https://www.bjs.com"+url;

    },
    image: function ($, product) {
        var image = "" + $(product).find('a>img').attr('src');
        if (image.indexOf('https://') === -1) {
            image = 'https:' + image
        }
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('div.display-options ').text();
        if (items === "") {
            return null
        } else {
            items = items.match(/[0-9]+/g).pop();
        }
        return parseInt(items);
    },
    pages: function ($) {
        var items = $('div.display-options ').text();
        if (items === "") {
            return null
        } else {
            numitems = items.match(/[0-9]+/g).pop();
        }

        var products = $('h2.ng-binding').text();
        if (products === "") {
            return null
        } else {
            products = products.match(/[0-9]+/g).pop();
        }

        var sum = products / numitems;
        return Math.ceil(sum);
    }
}

var Category = {
    name: function ($) {
        var name = $('h1.ng-binding').text();
        name = cleanName(name);
        return name;
    }
}
