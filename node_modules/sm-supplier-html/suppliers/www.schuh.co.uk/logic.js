var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('span[itemprop="name"]').text();
        name = cleanName(name);

        return name;
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('span#price').text();
        price = getPrice(price);

        return price;
    },
    image: function($) {
        var image = $('img[itemprop="image"]').attr('src');

        return image;
    },
    description: function($) {
        var description = $('div[itemprop="description"]').text().replace(/\s+/g, " ").trim();

        return description;
    }
}

var Search = {
    container: function($) {
        var product = $('li.product');

        return product;
    },
    name: function($, product) {
        let brand = $(product).find('p.brand').text()
        var name = $(product).find('p.name').text();
        name = cleanName(brand + ' ' + name);

        return name;
    },
    price: function($, product) {
        $(product).find('span.reductionStrike').remove();
        var price = $(product).find('p.price').text();

        if (price.indexOf('.') > -1) {
            price = getPrice(price);
        } else {
            //
            // if price without dot: getPrice(75) == null
            //
            price = price.substr(1).trim() + '.00';
        }
        

        return price;
    },
    url: function($, product) {
        var url = $(product).find('a').attr('href');

        return url;
    },
    image: function($, product) {
        var image = $(product).find('div.qviewOverlay img').attr('src');
        image = 'http:' + image;

        return image;
    }
}

//
// No pagination, ajax downloads
//
/*var Pagination = {

     items: function($) {

     },
     pages: function($) {

     }
}*/

var Category = {
    name: function($) {
        var name = $('div#headerOverlayContent h1').text();
        name = cleanName(name);

        return name;
    }
}
