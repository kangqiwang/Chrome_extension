var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')
module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []
        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        return cleanName($("h1.name").text());
    },
    inStock: function($) {
        let stock = true
        let check=$('.unavailable').text()
        stock = instockCheck(check,stock)
        return stock
},
    price: function($) {
        return getPrice($("p.price span").text());
    },
    image: function($) {
        return $("p.primary-image img").attr("src");
    },
    description: function($) {
        return $("div.long-description p").text().trim();
    }
}

var Search = {
    container: function($) {
        return $("div.wl-product-summary");
    },
    name: function($, product) {
        return cleanName($(product).find("p.name").text())
    },
    price: function($, product) {
        return getPrice($(product).find("p.price").text());
    },
    url: function($, product) {
        return $(product).find("p.name a").attr("href");
    },
    image: function($, product) {
        return $(product).find("p.media img").attr("src");
    }
}

var Pagination = {

     items: function($) {
        return parseInt($("div.wl-product-summary").length);
     },
     pages: function($) {
        return parseInt($("ul.wl-pagination").text().match(/[0-9]+/g).pop());
     }
}

var Category = {
    name: function($) {
        var name = $('h1.name').text();
        name = cleanName(name);
        return name;
    }
}
