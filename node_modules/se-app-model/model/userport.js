const Base = require('../lib/mongo/base')

class UserPorts extends Base {

    constructor(config) {
        super(config, 'userports')
    }

    populatePorts(payload, next) {
        var total;
        var startPort;
        const usedPorts = [];

        if (payload.type === 'search') {
            startPort = 4000;
            total = payload.parallelSearches ? payload.parallelSearches : 100
        }

        for (var x = 0; x < total; x++) {
            var p = {
                port: startPort + x,
                free: true
            }
            usedPorts.push(p);
        }

        this.insertMany(usedPorts, next)

    }

    getFree(payload, next) {
        this.getFreePort(payload, next);
    }

    markAsUsed(payload, next) {
        this._mark(false, payload, next)
    }

    markAsFree(payload, next) {
        this._mark(true, payload, next)
    }

    _mark(state, payload, next) {
        var timestamp = new Date().toISOString();
        var updatePayload = {
            query: { port: parseInt(payload.port) },
            update: { $set: { free: state, timestamp: timestamp, search: payload } }
        }
        this.update(updatePayload, next)
    }

    freeUnusedPorts(payload, next) {
        var timestamp = new Date().toISOString();
        var updatePayload = {
            query: { port: { $nin: payload.ports } },
            update: { $set: { free: true, timestamp: timestamp } },
            flags: { multi: true }
        };
        this.update(updatePayload, next);
    }

}

module.exports = UserPorts
