var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require ("../../lib/routine.js"); 
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('header.productDetail__header h1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var inStock = true
        var delivery = $('.pricePanel__delivery').text()
        inStock = inStockCheck(delivery, inStock)
	return inStock;
},
    price: function($) {
        var price = $('span.addToBasket__unitPriceText').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('div.imageViewer__easyzoom img').attr('src');
        return image;
    },
    description: function($) {
        var description = $('div#Features ul').text();
        if(description !== null && description !== undefined) {
            return description.replace(/(\r\n|\n|\r)/gm,"");
        }
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('article.productListItem');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('header.productListItem__header h1').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.addToBasket__vatIndicator').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('a').attr('href');
        return 'https://www.euroffice.co.uk' + url;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('select#RecsPerPage').text();
        items = items.match(/[0-9]+/g)

        if(items) {
            items = items.pop();
            return parseInt(items);
        } else {
            return null;
        }

     },
     pages: function($) {
/*        var items = $('select#RecsPerPage').text();
        numitems = items.match(/[0-9]+/g).pop(); */ 

        var numitems = routine.matchNumbersAndPop($, 'select#RecsPerPage'); 

/*        var products = $('div.filtersBar span').text();
        products = products.match(/[0-9]+/g).pop();  */

        var products = routine.matchNumbersAndPop($, 'div.filtersBar span');


/*        var sum = products / numitems;
        return Math.ceil(sum);*/

        return routine.pagesFromTotalAndProd(products, numitems);

        //return routine.matchNumbersAndPop($, "");
        //return routine.pagesFromTotalAndProd();
     }
}

var Category = {
    name: function($) {
        var name = $('div.main-header h1').text();
        name = cleanName(name);
        return name;
    }
}
