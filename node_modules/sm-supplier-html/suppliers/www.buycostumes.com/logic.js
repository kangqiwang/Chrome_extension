var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = buyCostumes =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        return cleanName($("li.left h1").text());
    },
    inStock: function($) {
return "UNCHECKED"
},
    price: function($) {
        return getPrice($("li.left dl.Price dd").text());
    },
    image: function($) {
        return $("span.magicZoomContainer img.photo").attr("src");
    },
    description: function($) {
        return $("p.ProdDescription").text().trim();
    }
}

var Search = {
    container: function($) {
        return $("li.h-product");
    },
    name: function($, product) {
        return cleanName($(product).find("h3.p-name").text());
    },
    price: function($, product) {
        return getPrice($(product).find("p.p-price").text());
    },
    url: function($, product) {
        return $(product).find("h3.p-name a").attr("href");
    },
    image: function($, product) {
        return $(product).find("img.lazy").attr("src");
    }
}

var Pagination = {

     items: function($) {
        var items =$("select.Option").text()
        if(items === ""){
            return null
        }else {
          items = items.match(/[0-9]+/g)[2];  
        }
        return parseInt(items)
     },
     pages: function($) {
        var itemNum = $("div.buyResultsCount").text()
        if(itemNum === ""){
            return null
        }
        itemNum = itemNum.match(/[0-9]+/g)[0];
        //else {
          
        //   if(itemNum) {
        //     return 1;
        //   } else {
        //     return null;
        //   }
        // }
        var items = Pagination.items($);
        return Math.ceil(itemNum / items);
     }
}

var Category = {
    name: function($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    }
}
