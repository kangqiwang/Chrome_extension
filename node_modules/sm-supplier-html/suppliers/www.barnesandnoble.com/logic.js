var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = BarnesAndNoble =  {
    "useJavascript":true,

    'sku': (url) => {
        return url.substring(url.lastIndexOf("=")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.barcode = Search.url($, product).substring(Search.url($, product).lastIndexOf("=")+1,Search.url($, product).lastIndexOf(""));
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("=")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';

            if(info.name !== null) {
                result.push(info)
            }
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1[itemprop="name"]').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var availableForDelivery = $('.purchase-options-item').first().text()
        var isInStock = true
        isInStock = inStockCheck(availableForDelivery,isInStock)
        // if (availableForDelivery) {
        //     if (availableForDelivery.indexOf('Available for Buy Online') > -1) {
        //         isInStock = true
        //     }
        // }
        return isInStock;
    },
    price: function($) {
        var price = $('span.current-price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img').attr('src');
        return 'http:' + image;
    },
    description: function($) {
        var description = $('div.flexColumn').text();

        if(description !== null) {
            return description.replace(/(\r\n|\n|\r|\t)/gm,"");
        }
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.product-shelf-tile');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('.product-shelf-title a').attr('title');
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('.product-shelf-pricing a').attr('title');
        price = getPrice(price);
        if(price){
            return price;
        }else{
            price = $(product).find('.product-shelf-pricing a').text()
            price=getPrice(price)
            return price
        }
        
    },
    url: function($, product) {
        var url = $(product).find('.product-info-title a').attr('href');
        return 'http://www.barnesandnoble.com' + url
    },
    image: function($, product) {
        var image = $(product).find('.product-image-container a img').attr('src');
        return 'http:' + image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('div.resultsListContainer ul#gridView li.clearer li').length;
        return parseInt(items / 2)
     },
     pages: function($) {
        var items = $('div.resultsListContainer ul#gridView li.clearer li').length;
        numitems = parseInt(items / 2);

        var products = $('div#searchNotice h1.count').text();
        if(products === ""){
            return null
        }else {
            products = products.match(/[0-9]+/g).pop();
        }

        var sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('h1#lowerTierHeader').text();
        name = cleanName(name);
        return name;
    }
}
