var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require("../../lib/routine.js");
let generateSku = require('../../lib/testPattern.js')
let regex = /\/([^\/]+)\/?$/


module.exports = jcpenney = {
    "useJavascript": true,
    "usePhantom": "jcpenney.phantom.js",
    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'sku': (url) => {
        let sku = generateSku(url, regex)[0].match('[0-9]+')[0]
        return sku
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = generateSku(Search.url($, product), regex)[0].match('[0-9]+')[0]
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            if (info.name && info.price) {
                result.push(info)
            }
        });
        return result
    },

    'pagination': function ($, next) {
        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);
        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);
        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        var inStock = true;
        var stockcheck = $('div._2bfW1').text();

        if (stockcheck !== null) {
            stockcheck = stockcheck.toLowerCase();
            if (stockcheck.indexOf('out of stock') > -1) {
                inStock = false;
            }
        }
        return inStock
    },
    price: function ($) {
        let price = getPrice($("div[data-automation-id='at-price-value']").html())
        return price;
    },
    image: function ($) {
        var image = $('img').attr('src');
        image = 'https:' + image
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.ProductCard-productCardPane');
        return searchProducts;
    },
    name: function ($, product) {
        var name = cleanName($(product).find('h6').text());
        return name;
    },
    price: function ($, product) {
        let price = getPrice($(product).find("div[data-automation-id='product-price']").html())
        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = "https://www.jcpenney.com" + $(anchor).attr('href');
        }
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        image = 'https:' + image
        return image;
    }
}

var Pagination = {

    items: function ($) {
        /*        var items = $('div.productResults_perPage').text();
                items = items.match(/[0-9]+/g).pop();
                return parseInt(items);*/

        return routine.matchNumbersAndPop($, 'div.productResults_perPage');

    },
    pages: function ($) {
        /*        var items = $('div.productResults_perPage').text();
                numitems = items.match(/[0-9]+/g).pop();*/

        var numitems = routine.matchNumbersAndPop($, 'div.productResults_perPage');

        /*        var products = $('header span[data-anid="numberOfResults"]').text();
                products = products.match(/[0-9]+/g).pop();*/

        var products = routine.matchNumbersAndPop($, 'header span[data-anid="numberOfResults"]');

        /*        var sum = products / numitems;

                (sum);
                return Math.ceil(sum);*/

        return routine.pagesFromTotalAndProd(products, numitems);
    }
}

var Category = {
    name: function ($) {
        var name = $('h1._2dsJz._3PFEs').text();
        name = cleanName(name);
        return name
    }
}