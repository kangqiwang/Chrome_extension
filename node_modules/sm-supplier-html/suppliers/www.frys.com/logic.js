var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'sku': (url) => {
        let thisPattern = new RegExp(/^(\d{7}(?![\;\?\&\.\,])*$)/);
        url = url.split(';')[0];
        url = url.split('?')[0];
        let sku = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""));
        sku = thisPattern.test(sku) ? sku : null;
        return sku;
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        // info.barcode = Product.barcode($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            var sku = Search.url($, product).split(';')[0]
            sku = sku.split('?')[0]
            // info.barcode = Search.barcode($, product);
            info.name = Search.name($, product);
            info.sku = sku.substring(sku.lastIndexOf("/") + 1, sku.lastIndexOf(""))
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "us";
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);
        info.nexturl = Pagination.nexturl($)

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h3.product-title').text();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var inStock = true;
        var checkstock = $('div.product_special_icons').text();
        let addButton = $('.btn.btn-success.pull-right').text()
        if (addButton !== null) {
            addButton = addButton.toLowerCase()
            if (addButton.indexOf('sold out') > -1) {
                inStock = false
            }
        }

        if (checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if (checkstock.indexOf('pickup only') > -1) {
                inStock = false;
            }
        }
        if (checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if (checkstock.indexOf('sold out') > -1) {
                inStock = false;
            }
        }
        if (checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if (checkstock.indexOf('special orders') > -1) {
                inStock = false;
            }
        }
        return inStock;

    },
    price: function ($) {
        var price = $('table.price-details-table').text();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.product-image-slider-main div:nth-child(2) a img').attr('src');
        return image;
    },
    // barcode: function ($) {
    //     var barcode = $('div#ProductAttributes ui li:nth-child(3)').text().replace("UPC", "").replace("#", "").trim();
    //     return barcode;
    // }
}

var Search = {
    container: function ($) {
        var searchProducts = $("div.product");

        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find("p#prodDescp a").text();

        cleanName(name);

        return name;
    },
    price: function ($, product) {
        var price = $(product).find("li#did_price1valuediv label").text();

        return getPrice(price);
    },
    url: function ($, product) {
        var url = $(product).find("p#prodDescp a").attr("href");

        url = "http://www.frys.com/" + url;

        return url;
    },
    image: function ($, product) {
        var image = $(product).find("div#prodImg img").attr("src");

        return image;
    },
    // barcode: function ($, product) {
    //     var barcode = $(product).find("p.col-xs-6:nth-child(3)").text();
    //     barcode = barcode.substring(barcode.lastIndexOf(":") + 2, barcode.lastIndexOf(""))
    //     return barcode;
    // }
}

var Pagination = {

    items: function ($) {
        return $('div.product').length
    },
    pages: function ($) {
        var number= $('h6').text()
        number=number.match(/[0-9]+/g)
        if(number.length>2){
            return number[2]
        }
        return 0
    },
    nexturl: function ($) {
        var next = $('#navigationNext').attr('href')
        return next
    }
}



var Category = {
    name: function ($) {
        var name = $("h6 span").text();
        cleanName(name);

        var colon = name.indexOf(":");

        name = name.slice(0, colon);

        return name;
    }
}
