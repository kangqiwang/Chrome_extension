var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck = require('../../lib/inStockCheck.js')
let generateSku = require('../../lib/testPattern.js')
let regex = /[0-9]+$/

module.exports = argos = {
    "useJavascript": false,

    "pageCheck": function ($, next) {

        var pageType = null;

        if (Array.isArray(Search.container($))) {
            pageType = 'search';
        }
        else if (pageType = null) {
            var info = new ProductPageInfo()

            if (Array.isArray(info)) {
                pageType = 'product';
            }
        } else {
            return 'Invalid page type';
        }
    },

    'sku': (url) => {
        generateSku(url, regex)[0]
        return url
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.barcode = Product.barcode($)
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo();
            info.name = Search.name($, product);
            info.sku = generateSku(Search.url($, product), regex)[0]
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}


var Product = {
    name: function ($) {
        var name = $('h1.product-name-main span[itemprop*="name"]').html();

        if (name !== null) {
            name = $('h1.product-name-main span[itemprop*="name"]').html().replace('.', '');
        }
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        let avaliable=$('.availability-message.message-tick').text()
        let availability=$('.fulfilment-box').text()
        let check =$('p.text-center').text()
        var inStock = true
        inStock=instockCheck(check,inStock)
        inStock = instockCheck(availability,inStock)
        inStock = instockCheck(avaliable,inStock)

        // if(avaliable !== null){
        //     inStock = true
        //     avaliable=avaliable.toLowerCase()
        //     if(avaliable.indexOf('pre-order') > -1 || avaliable.indexOf('out of stock') > -1 || avaliable.indexOf('not available') > -1) {
        //         inStock = false
        //     }
        // }

        // var inStock = true;


      //  var checkstock = $('').html();
      //  var pagenotfound = $('div.heading p').html();

      //  if (pagenotfound !== null) {
      //      pagenotfound = pagenotfound.toLowerCase();
      //      if (pagenotfound.indexOf("sorry, we can&apos;t find the page you are looking for.") > -1) {
      //          inStock = false;
      //      }
      //  }

        return inStock;

    },
    price: function ($) {
        var price = $('li.price.product-price-primary ').text();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.media-player li.active a img').attr('src');
        image = 'http:' + image
        return image;
        371470
    },
    barcode: function ($) {
        var descriptionLi = $('div[itemprop*="description"] ul li');
        var barcode = null;
        descriptionLi.map(function (index, product) {
            var info = $(product).html();
            if (info.indexOf('EAN') === 0) {
                barcode = info.replace("EAN: ", "").replace(".", "").trim();
            }
        })

        return barcode;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.ac-product-card');

        if (searchProducts.length === 0) {
            searchProducts = $('a.product');
        }

        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('div.ac-product-name').text();

        if (name === "") {
            var name = $(product).find('').text();
        }

        if (name === "") {
            var name = $(product).find('label.product-title').text();
        }


        name = cleanName(name);

        // Argos have a . at the end of each product name so let's remove it
        return name.replace(/\.$/, '');

    },
    price: function ($, product) {
        var price = $(product).find('span.ac-product-price__amount').html();



        //      if (price === null) {
        //          price = $(product).find('li.price-now').text();
        //      }

        //      if (price === "") {
        //          price = $(product).find('span.price-now').text();
        //      }
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {

        var url = null;
        var anchor = $(product).attr('href');

        if (anchor === undefined) {
            anchor = $(product).find('a');

            if (anchor) {
                url = $(anchor).attr('href');
            }

            if (url.indexOf('cat.hlserve.com') > -1) {
                url = url.substring(url.indexOf("www.") + 0);
                url = decodeURIComponent(url)
            }
        } else {
            url = anchor
        }

        if (url.indexOf('www.argos.co.uk') < 1) {
            url = 'https://www.argos.co.uk' + url
        }

        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');

        if (image === undefined) {
            image = 'http:' + $(product).find('div.productImgContainer img').attr('src');
        }

        if (image === 'http:undefined') {
            image = 'http:' + $(product).find('div.product-image-container img').attr('src');
        }


        if (image.indexOf('/wcsstore') > -1) {
            image = 'https://www.argos.co.uk' + image;
        }
        return 'https:' + image;

    }
}

function getPaginationitems($) {
    var items = $('li.item');
    items = items.length;

    if (items === 0) {
        items = $('a.product')
        items = items.length;
    }

    return parseInt(items);
}

var Pagination = {

    items: function ($) {

        var items = getPaginationitems($);

        if (items) {
            return items;
        } else {
            return null;
        }


    },
    pages: function ($) {
        var numitems = getPaginationitems($);

        var result = null
        var products = $('h2 span').text();

        if (products !== "") {
            products = products.match(/[0-9]+/g).pop();
            result = Math.ceil(products / numitems)
        } else {
            if (Search.container($).length > 0) {
                result = 1;
            }
        }



        return result
    }
}

var Category = {
    name: function ($) {
        var name = $('div#categorylist h2').text();

        if (name.indexOf('(') > -1) {
            name = name.replace(/ *\([^)]*\) */g, "");
        }

        name = cleanName(name);
        return name;
    }
}
