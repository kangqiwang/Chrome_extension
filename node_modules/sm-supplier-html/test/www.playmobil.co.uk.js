var should = require('should');
var Structure = require('../lib/structure.js')
const cache = require('../lib/cache')

describe('www.playmobil.co.uk', function () {



    describe('In stock Page', function () {

        var payload = {
            "pageType": "product",
            "url": "https://www.playmobil.co.uk/construction-site/6553.html",
            "html": cache.load("https://www.playmobil.co.uk/construction-site/6553.html")
        }

        it('should be true when product is in stock', function (done) {

            Structure(payload, function (err, inStockPage) {
                var expected = JSON.stringify({
                    "name": "Construction Site",
                    "price": "16.50",
                    "url": payload.url,
                    "inStock": true,
                    "stockLevel": null,
                    "image": "https://media.playmobil.com/i/playmobil/6553_product_detail?locale=en-GB,en,*&$pdp_product_main_xl$&strip=true",
                    "country": "uk"
                })
                JSON.stringify(inStockPage).should.equal(expected);
                done()
            })
        });

    });

    // describe('Out of Stock Page', function () {

    //     var payload = {
    //         "pageType": "product",
    //         "url": "",
    //         "html": cache.load("")
    //     }

    //     it('should be true when product is in stock', function (done) {

    //         Structure(payload, function (err, inStockPage) {
    //             var expected = JSON.stringify({
    //                 "name": "",
    //                 "price": "",
    //                 "url": payload.url,
    //                 "inStock": false,
    //                 "stockLevel": null,
    //                 "image": "",
    //                 "country": "uk"
    //             })
    //             JSON.stringify(inStockPage).should.equal(expected);
    //             done()
    //         })
    //     });

    // });

});

describe('Search Page', function () {

    var payload = {
        "pageType": "search",
        "url": "https://www.playmobil.co.uk/onlineshop/products/city-action",
        "html": cache.load("https://www.playmobil.co.uk/onlineshop/products/city-action")
    }

    // Change to be the number of products on the page
    var x = 7;
    it('should return ' + x + ' numer of products', function () {
        let result = Structure(payload)
        result.length.should.equal(x);
    });

    var firstProductName = 'Critters Go For A Ride 100 Large Piece Jigsaw Puzzle';
    it('first product should be ' + firstProductName, function() {

        var expected = JSON.stringify({
            barcode: null,
            name: firstProductName,
            price: '4.99',
            url: 'http://www.bitsandpieces.com/product/critters-go-for-a-ride-100-large-piece-jigsaw-puzzle-42777',
            image: 'https://s3.amazonaws.com/cdn.bitsandpieces.com/images/160/42777.jpg',
            country: 'us'
        })
        
        let result = Structure(payload)

        var first = result.shift()
        
        JSON.stringify(first).should.equal(expected)

    })

    var lastProductName = 'Soccer Sliding Wooden Puzzle';
    it('last product should be ' + lastProductName, function () {
        var expected = JSON.stringify({
            barcode: null,
            name: lastProductName,
            price: '14.99',
            url: 'http://www.bitsandpieces.com/product/soccer-sliding-wooden-puzzle',
            image: 'https://s3.amazonaws.com/cdn.bitsandpieces.com/images/160/43952.jpg',
            country: 'us'
        })

        const result = Structure(payload);

        var last = result.pop()
        JSON.stringify(last).should.equal(expected)
    })

});

    describe('Search page category', function () {

        var payload = {
            "pageType": "category",
            "url": "https://www.playmobil.co.uk/onlineshop/products/city-action",
            "html": cache.load("https://www.playmobil.co.uk/onlineshop/products/city-action")
        }

        it('should be true when the category is correct', function (done) {

            Structure(payload, function (err, category) {
                var expected = JSON.stringify({
                    "name": "City Action",
                    "url": payload.url 
                })
                JSON.stringify(category).should.equal(expected);
                done()
            })
        });

    });


