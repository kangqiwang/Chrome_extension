var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('#pdpMain > div.product-detail-container.product-detail.pull-right > h1').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        return 'unchecked';
    },
    price: function ($) {
        var price = $('#product-content > div.product-price.h6 > span.price-sales').first().text();
        price = getPrice(price);

        return price;
    },
    image: function ($) {
        var image = $('#zoomviewer_swatches > div:nth-child(1) > div > div:nth-child(1) > div').attr('style').split('url("').pop().replace('")', '').split('?').shift();

        return image;
    },
    description: function ($) {
        var des = $('#product-details').text().replace(/\s+/g, " ").trim();;

        return des;
    }
}

var Search = {
    container: function ($) {
        var product = $('li.grid-tile');

        return product;
    },
    name: function ($, product) {
        var name = $(product).find('div.product-name > h2 > a').text();
        name = cleanName(name);

        return name;
    },
    price: function ($, product) {
        var price = $(product).find('div.product-pricing.h10 > div > span.product-sales-price').text();

        if (price == '') {
            price = $(product).find('div.product-pricing.h10 > span.product-sales-price').text();
        }
        price = getPrice(price);

        return price;
    },
    url: function ($, product) {
        var url = $(product).find('a.name-link').attr('href');

        return url;
    },
    image: function ($, product) {
        var image = $(product).find('a.thumb-link img').attr('src');

        return image;
    }
}

//
// no pagination
//
/*
var Pagination = {

    

}*/

var Category = {
    name: function ($) {
        var name = $('#secondary > h1').text().replace(/\s+/g, " ").trim();
        name = cleanName(name)

        return name;
    }
}