var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = fisherPrice =  {
    "useJavascript": true,
    "usePhantom" : "fisher-price.phantom.js",

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1').text()
        name = cleanName(name);
        return name;
    },

    inStock: function($) {

        // var stock =$('.sublist').text()
        // var ofs =$('.shopperActions .inactiveLink').html()
        
        // if(stock.indexOf('In Stock') > -1) {
        //     return 'unchecked'
        // } else if(ofs !== null){
 
        //     return false
        // } else {
        //     return 'UNCHECKED'
        // }
        return 'unchecked'
    
},
    price: function($) {
        var price = $('span.price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $("div.rsMobileZoomContainer img").attr('src');
        return 'http:' + image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.product_listing_container .product');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.product_name a').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.price ').text(); 
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('div.product_name a');
        if(anchor) {
            url = 'http://fisher-price.mattel.com' + $(anchor).attr('href');
        }
        return url;

    },

    image: function($, product) {
        var image = $(product).find('div.image a img').attr('src');
        return "http:" + image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('.header_bar span').text()
        items = items.match(/[0-9]+/g)
        items = items[1]
        items = parseInt(items)
              
       
        return items;
     },
     pages: function($) {
        var items = $('.header_bar span').text()
        items = items.match(/[0-9]+/g)
        items = items[2]
        items = parseInt(items)
        
        
        

        var products = $('.header_bar span').text();
        products = products.match(/[0-9]+/g)
        products = products[1]
        
        var result = null;
        result = Math.ceil(items / products)
        result = parseInt(result)

        // if(products !== "") {
        //     products = products.match(/[0-9]+/g).pop();
        //     
        // }else {
        //     if(('select.pageSize').length > 0) {
        //         result = 1;
        //     }
        // }
        return result
     }
}

var Category = {
    name: function($) {
        var name = $('div.leftnavcategory-widget ul li strong').text();
        name = cleanName(name);
        return name;
    }
}

