var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = footlocker =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1#product_title').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var inStock = true;
        return inStock;
    },
    price: function($) {
        var price = $('span#list_price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('link[rel=image_src]').attr('href');
        return 'http:' + image;
    },
    description: function($) {
        var description = $('div#pdp_description');
        if (description) {
            return description.text().replace(/\s+/gm, ' ').trim();
        }
    }
}

var Search = {
    container: function($) {
        return $('div#endeca_search_results li:not(.clearRow)');
    },
    name: function($, product) {
        var name = $(product).find('span.quickViewButtonWrap a:nth-child(2)').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('p.product_price').text();
        price = price.match(/[0-9.,]+/gm).pop();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('li a:nth-child(2)').attr('href');
        return url;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return 'http:' + image;
    }
}

var Pagination = {

     items: function($) {
        var products = $('div.itemsPerPage').text();
        products = products.match(/\d+/gm).pop();
        return parseInt(products);
     },
     pages: function($) {
        var products = $('div.itemsPerPage').text();
        products = products.match(/\d+/gm).pop();

        var total = $('div.mainsite_breadcrumbs span:nth-child(1)').text();
        total = total.match(/\d+/gm).pop();

        var pages = total / products;
        return Math.ceil(pages);
     }
}

var Category = {
    name: function($) {
        var name = $('title').text();

        if(name.indexOf('|') > -1) {
            name = name.split('|').shift();
        }
        name = cleanName(name);
        return name;
    }
}
