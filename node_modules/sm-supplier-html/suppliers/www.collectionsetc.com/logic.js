var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = collectionsEtc =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            //result.push(info)

            if(info.price !== null) {
                result.push(info)
            }
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1[itemprop*="name"]').html();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        return "UNCHECKED";

    },
    price: function($) {
        var price = $('span[itemprop*="price"]').html();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('img.LargeImage').attr('src');
        image = 'http://www.collectionsetc.com' + image;
        return image;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.product-snippet');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('span[itemprop*="name"]').html();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {

        let price = $(product).find('.on-sale').text()
            price = getPrice(price) 

            if(price) {
                if(price == "") {
                    price = $(product).find('.product-snippet-pricing').text()
                    price = getPrice(price)

                }
            } else {
                price = $(product).find('.product-snippet-pricing').text()
                price = getPrice(price)
            }
        return price

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = 'http://www.collectionsetc.com' + $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('img.product-snippet-image').attr('src');
        image = 'http://www.collectionsetc.com' + image;
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('ul.items-per-page-module').text();
        if(items === ""){
            return null
        }else {
            items = items.match(/[0-9]+/g).pop();
        }
        
        return parseInt(items);
     
     },
     pages: function($) {
        var items = $('ul.items-per-page-module').text(); 
        if(items === ""){
            return null
        }else {
            numitems = items.match(/[0-9]+/g).pop();
        }
        

        var products = $('div.results-returned').text();
        if(products === ""){
            return null
        }else {
            products = products.match(/[0-9]+/g).pop()
        }

        sum = products / numitems
        return Math.ceil(sum)

    }
}

var Category = {
    name: function($) {
        var name = $('div.page-title h1').text();
        name = cleanName(name);
        return name;
    }
}
