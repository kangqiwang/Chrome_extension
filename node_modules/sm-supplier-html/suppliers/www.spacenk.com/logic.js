var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('.product-brand>span[itemprop="name"]').text();
        var nam1 =$('.product-name').text()
        name = cleanName(name+' '+nam1);
        return name;
    },
    inStock: function ($) {
        var inStock = true;
        return inStock;
    },
    price: function ($) {
        var price = $('span.price-sales').text();
        // The getPrice() function fails if the text has newlines in it
        price = getPrice(price)
        return price;
    },
    image: function ($) {
        var image = $('img.primary-image').attr('src');
        return image;
    },
    description: function ($) {
        var description = $('div.accordion-wrapper:nth-child(1) .pdp-accordion-description').text();
        if (description) {
            description = description.replace(/(\r|\n|\r\n)/gm, ' ').replace(/\s+/gm, ' ').trim();
            return description;
        }
    }
}

var Search = {
    container: function ($) {
        return $('li.grid-tile');
    },
    name: function ($, product) {
        var brand = $(product).find('div.product-tile_vendor').text();
        var name = $(product).find('div.product-tile_name').text();
        name = cleanName(brand + " " + name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('.product-sales-price').text();
        price = price.replace(/\$|\s+/gm, '');
        price = getPrice(price)
        return price;
    },
    url: function ($, product) {
        var url = $(product).find('a.product-tile_link--vendor').attr('href');
        return 'https://www.spacenk.com' + url;
    },
    image: function ($, product) {
        var image = $(product).find('img.product-tile_pic').attr('src');
        return image;
    }
}

// var Pagination = {

//      items: function($) {

//      },
//      pages: function($) {

//      }
// }

var Category = {
    name: function ($) {
        var name = $('h1.refinement-header').text();
        name = cleanName(name);
        return name;
    }
}

