var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');

module.exports = halfpriceperfumes = {
    "useJavascript": true,
    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('div.product img').attr('alt');
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        return 'unchecked'
    },
    price: function ($) {
        var price = $('span#our_price_display').text();
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $("img#bigpic").attr('src');
        return 'https://www.halfpriceperfumes.co.uk' + image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('ul.product_list li');
        return searchProducts;
    },
    name: function ($, product) {
        var name = $(product).find('a.product_img_link').attr('title');
        if (name !== undefined || name !== null) {
            name = cleanName(name);
        }
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('span.product-price').text();
        price = getPrice(price);
        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img.img-responsive').attr('src');
        return image;
    }
}
var Category = {
    name: function ($) {
        return cleanName($("span.cat-name").text());
    }
}
var Pagination = {

    items: function ($) {
        var items = cleanName($("div.product-count").text());

        if (items) {
            items = items.split("Showing")

            if (items) {
                items = items[1].match(/[0-9]+/g);

                if (items) {
                    return parseInt(items[1]);
                } else {
                    return null;
                }
            } else {
                return null;
            }
        } else {
            return null;
        }

        /*        return parseInt(cleanName($("div.product-count").text())
                    .split("Showing")[1].match(/[0-9]+/g)[1]);*/

    },
    pages: function ($) {
        var pages = cleanName($("div.product-count").text());

        if (pages) {
            pages = pages.split("Showing")

            if (pages) {
                pages = pages[1].match(/[0-9]+/g);

                if (pages) {
                    return Math.ceil(parseInt(pages[2]) / this.items($));
                } else {
                    return null;
                }
            } else {
                return null;
            }
        } else {
            return null;
        }



        /*        return  Math.ceil(parseInt(cleanName($("div.product-count").text())
                    .split("Showing")[1].match(/[0-9]+/g)[2]) / this.items($));*/

    }
}