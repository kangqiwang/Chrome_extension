var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck=require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('span[itemprop="name"]').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        var inStock=true
        var check=$('div.outofstockerror').text()
        inStock = instockCheck(check,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('span[itemprop="price"]').text();
        price = getPrice(price);

        return price;
    },
    image: function ($) {
        var image = $('div.pdpImageWrap ul img').attr('src');
        image = 'http:' + image;

        return image;
    },
    description: function ($) {
        var description = $('div.selfridgesSaysInner p').next().text().replace(/\s+/g, " ").trim();

        return description;
    }
}

var Search = {
    container: function ($) {
        var product = $('.box.listing-item');
        return product;
    },
    name: function ($, product) {
        var brand = $(product).find('.richText-content>h4').text();
        var name = $(product).find('.richText-content>p').text()
        name = cleanName(brand+' '+name);
        return name;
    },
    price: function ($, product) {
        var stdPrice = $(product).find('.now-price').text();
        stdPrice = getPrice(stdPrice);
        return stdPrice;
    },
    url: function ($, product) {
        var url = $(product).find('.richText-content>p>a').attr('href');
        return 'https://www.selfridges.com'+url;
    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return 'https:'+image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('p.numberOfResults.top strong').text();
        items = JSON.parse(items);

        return items;
    },
    pages: function ($) {
        var items = $('p.numberOfResults.top strong').text();
        items = JSON.parse(items);

        var products = $('p.numberOfResults.top span').text();

        var sum = products / items;
        sum = Math.ceil(sum);

        return sum;
    }
}

var Category = {
    name: function ($) {
        var name = $('div.plptitle h1').text();

        return name;
    }
}
