var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');


module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        return cleanName($("div.product-name h1").text());
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        return getPrice($("span.price").text());
    },
    image: function($) {
        return $("img.gallery-image").attr("src");
    },
    description: function($) {
        return $("div.box-collateral div.std div.block-content p").first().text();
    }
}

var Search = {
    container: function($) {
        return $("li.product-item");
    },
    name: function($, product) {
        return cleanName($(product).find("a.product-item-link").attr('title'));
    },
    price: function($, product) {
        return getPrice($(product).find("span.price").text());
    },
    url: function($, product) {
        return $(product).find("a.product-item-link").attr("href");
    },
    image: function($, product) {
        return $(product).find("span.product-image-wrapper img").attr("src");
    }
}

var Pagination = {

     items: function($) {
        items = $("div.sorter p.amount").text().match(/[0-9]+/g)[1]; 
        items = JSON.parse(items);
        return items;
     },
     pages: function($) {
        var items = Pagination.items($);
        var itemCount = $("div.sorter p.amount").text().match(/[0-9]+/g)[2];

        return (Math.ceil(itemCount / items));
     }
}

var Category = {
    name: function($) {
        var name = $('div.page-title h1').text();
        name = cleanName(name);
        return name;
    }
}

