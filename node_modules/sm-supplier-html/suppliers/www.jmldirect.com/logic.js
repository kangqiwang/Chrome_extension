var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "uk"

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "uk"
            result.push(info)
        });

        return result
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }


}

var Product = {
    name: function($) {
        var name = $('h1.product-header').html();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('.now-price').html();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('.product-images-container img').attr('src');
        image = 'http://www.jmldirect.com' + image;
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.product-listing-column');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('.product-name a').html();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('.now-price').html();

        if (price === null) {
            price = $(product).find('.price').html();
        }
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('.product-name a');
        if(anchor) {
            url = 'http://www.jmldirect.com' + $(anchor).attr('href');
        }
        return url;
    },
    image: function($, product) {
        var image = $(product).find('.product-image img').attr('src');
        image = 'http://www.jmldirect.com' + image;
        return image;
    }   
}
var Category = {
    name: function($) {
        return cleanName($("div.col-md-9 h1").text());
    }
}

var Pagination = {

     items: function($) {
        return parseInt(cleanName($("select.fnselectPageSize").text())
            .match(/[0-9]+/g)[0]);

     },
     pages: function($) {
        return Math.ceil(cleanName($("div.products-found").text())
            .match(/[0-9]+/g)[0] / this.items($));

     }
}