var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');

module.exports = idealworld =  {
    "useJavascript": true,
    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }


}

var Product = {
    name: function($) {
        var name = $('h1.product-header').text();
        name = cleanName(name);
        return name;
    },

    inStock: function($) {
        var price = $('li[itemprop="price"]').text();
        price = getPrice(price);
        if(price){
            return true
        }else{
            return false
        }
        
},
    price: function($) {
        var price = $('li[itemprop="price"]').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $("img.carousel-image").attr('src')
        return image;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.product-grid ul.product-lister li.product-item');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('a.product-description').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.now-price').text();
        price = getPrice(price);

        return price;
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('div.product-details a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return 'http://www.idealworld.tv' + url;

    },
    image: function($, product) {
        var image = $(product).find('img.img-responsive').attr('src');
        
        if(image) {
            image = image.replace("//", "").replace("http:", "");

            image = "http://" + image;

            return image;
        } else {
            return null;
        }

    }
}

var Category = {
    name: function($) {
        return cleanName($("h1").text());
    }
}

var Pagination = {

     items: function($) {

        var pages = $('div.lister-pagination label').eq("-1").text();
        pages = pages.match(/[0-9]+/g);

        var items = $('li.product-item');

        if(items && pages) {
           items = items.length;
           return parseInt(items); 
       } else {
        return null;
       }


     },
     pages: function($) {
        // var items = $('').html(); 
        // numitems = items.match(/[0-9]+/g).pop();

        var items = $('li.product-item');

        var pages = $('div.lister-pagination label').eq("-1").text();
        pages = pages.match(/[0-9]+/g);

        if(pages && items) {
            return parseInt(pages.pop());
        } else {
            return null;
        }

     }
}