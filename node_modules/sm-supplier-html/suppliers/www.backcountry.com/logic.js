var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck.js')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("id=") + 3, url.lastIndexOf("="))
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "us"

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("id=") + 3, Search.url($, product).lastIndexOf("="));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "us";
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1.product-name').text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        let stock = true
        let check = $('.js-product-stockstatus').text()
        stock = instockCheck(check,stock)
        return stock
    },
    price: function ($) {
        var price = $('span.product-pricing__sale').html();
        var price2 = $('product-pricing__retail').html();

        if (price === null) {
            price = price2
        }

        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('.product-detail-imgs__li img').attr('src');
        image = 'http:' + image
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.product');
        return searchProducts;
    },
    name: function ($, product) {
        var brand = $(product).find('h4 .ui-pl-name-brand').text();
        var item = $(product).find('h4 .ui-pl-name-title').text();
        name = brand + ' ' + item
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('span.price-sale').html();

        var priceHigh = $(product).find('span.ui-pl-pricing-high-price').html();

        // var priceLow = $(product).find('span.ui-pl-pricing-low-price').html(); 

        if (price === null) {
            price = priceHigh
        }

        price = getPrice(price);

        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            
            if($(anchor).attr('href').indexOf('http') > -1){
                url = $(anchor).attr('href')
            }else {
                url = 'https://www.backcountry.com' + $(anchor).attr('href')
            }
            
        }
        return url;
    },
    image: function ($, product) {
        var image = $(product).find("div.ui-pl-img.qa-pl-img img")
        if(image){
            image='https:'+$(image).attr('src')
            return image
        }else{
            return null
        }
        // if(image != null) {
        // image = image.substring(image.lastIndexOf("//"), image.lastIndexOf("jpg"))
        // }
        // return 'https:' + image + 'jpg';
    }
}

var Pagination = {

    items: function ($) {
        var items = $('div.plp-product-grid .product');
        return parseInt(items.length);
    },
    pages: function ($) {
        var items = $('div.plp-product-grid .product');
        numitems = items.length;

        var products = $('span.js-results-qty').text();
        if (products === "") {
            return null
        } else {
            if (products.indexOf(',') > -1) {
                products = products.replace(",", "");
            }
            products = products.match(/[0-9]+/g).pop()
        }


        var sum = products / numitems;
        return Math.ceil(sum);
    }
}

var Category = {
    name: function ($) {
        var name = $('h1#search-term').text();
        name = cleanName(name);
        return name;
    }
}
