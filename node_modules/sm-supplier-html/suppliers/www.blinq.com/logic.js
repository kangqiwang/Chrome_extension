var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
// Pagination not needed
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck=require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });
        
        return result
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h2[itemprop="name"]').last().text();
        name = cleanName(name);
        return name;
    },
    inStock: function ($) {
        var inStock=true
        var check =$('.availability').first().text()
        inStock=inStockCheck(check,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('div.price').first().html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.product-image-preview a img[itemprop*="image"]').attr('src');
        return image;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('a.tile-link.js-product-tile.product-link');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('h4').text()
        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('.final-price').text();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = $(product).attr('href')
        url = url.substring(url.lastIndexOf("https") + 0, url.lastIndexOf(""))
        url = decodeURIComponent(url);
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('div.img').attr('style')
        image = image.substring(image.lastIndexOf("(") + 1, image.lastIndexOf(")"))
        image = decodeURIComponent(image);
        return image;
    }
}


var Category = {
    name: function ($) {
        var name = $('h1.results-text strong').text();

        if (name.indexOf('in') > -1) {
            name = name.split('in ').pop();
        }

        name = cleanName(name);
        return name;

    }
}

