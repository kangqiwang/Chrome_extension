var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck=require('../../lib/inStockCheck')
let generateSku = require('../../lib/testPattern.js')
let regex = /[0-9]+$/


module.exports = HomeDepot = {

    'sku': (url) => {
        generateSku(url, regex)[0]
        return url
    },
    "useJavascript": true,
    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = generateSku(Search.url($, product), regex)[0]
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';

            if (info.price !== null) {
                result.push(info)
            }

        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('.product-title__title').text();
        name = cleanName(name);
        return name;
    },

    inStock: function ($) {
        var check=$('.heading-message').last().text()
        var inStock = true
        inStock=instockCheck(check,inStock)
        return inStock
    },
    price: function ($) {
        var price = $('#ajaxPrice').attr('content');
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $("img#mainImage").attr('src');
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('#products .plp-pod');
        return searchProducts;
    },
    name: function ($, product) {
        var name = $(product).find('div.pod-plp__description a').text();

        if (name === "") {
            name = $(product).find('div.pod-plp__description--inspirational a').text()
        }
        name = cleanName(name);
        return name;
    },
    price: function ($, product) {
        var price = $(product).find('div.price__wrapper--inspirational span.item_price').html();

        if (price === null) {
            price = $(product).find('div.price__wrapper div.price').text().trim();

            decimals = price.substring(price.length - 2);
            price = price.substring(0, price.length - 2);
            price = price + '.' + decimals;
        }

        if(price) {
        price = price.replace(',','')
        price = getPrice(price);
        }

        if (price === "") {
            price = null
        }

        return price;
    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return 'http://www.homedepot.com' + url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('#products .plp-pod');
        return parseInt(items.length);
    },
    pages: function ($) {
        var pages = $('ul.hd-pagination__wrapper ').text();
        var result = null;

        if (pages !== "") {
            pages = pages.match(/[0-9]+/g).pop();
            result = parseInt(pages);
        } else {
            if (Search.container($).length > 0) {
                result = 1
            }
        }
        return result;

    }
}

var Category = {
    name: function ($) {
        var name = $('h1.page-header').text();
        name = cleanName(name);
        return name;
    }
}

