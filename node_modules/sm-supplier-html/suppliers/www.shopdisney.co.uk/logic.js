var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var instockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithSupplierName = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    // 'sku': (url) => {
    //     return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(".prd"))
    // },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            // info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(".prd"));
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1.product__name').text()
        name = cleanName(name)
        return name
    },
    inStock: function ($) {
        var inStock = true
        var messgae = $('.product__soldout').text()
        if(messgae !== undefined){
        inStock = instockCheck(messgae,inStock)
    }
        return inStock
    },
    price: function ($) {
        var price = $('span.price__current').text()
        price = getPrice(price)
        return price
    },
    image: function ($) {
        var image = $('div.mainimage img').attr('src')
        return image
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.catlisting__productitem')
        return searchProducts

    },
    name: function ($, product) {
        var name = $(product).find('h4.product__tilename').text()
        name = cleanName(name)
        return name

    },
    price: function ($, product) {
        var price = $(product).find('span.price__current').text()
        price = getPrice(price)
        return price

    },
    url: function ($, product) {
        var url = $(product).find('a').attr('href');
        return url
    },

    image: function ($, product) {
        var image = $(product).find('img').attr('src')
        return image
    }
}

var Pagination = {
    items: function ($) {
        var items = $('div.catlisting__productitem').length
        return parseInt(items)
    },
    pages: function ($) {
        var pages = $('div.pagination-container__bar').text()
        pages = pages.match(/[0-9]+/g)
        pages = pages.pop()

        return parseInt(pages);
    }
}

var Category = {
    name: function ($) {
        var name = $('span.breadcrumbs__breadcrumb--last').text()
        name = cleanName(name)
        return name
    }
}

