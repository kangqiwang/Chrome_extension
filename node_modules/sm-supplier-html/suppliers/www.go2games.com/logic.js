var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }


}

var Product = {
    name: function($) {
        var name = $('span.base').html();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        var inStock = true;
        var checkstock = $('div.availability').html();

        if (checkstock !== null) {
            checkstock = checkstock.toLowerCase();
            if (checkstock.indexOf('pre order') > -1) {
                inStock = false
            }
            if (checkstock.indexOf('out of order') > -1){
                inStock=false
            }
        }
        return inStock;
    },
    price: function($) {
        var price = $('span.price').html();
        if (price === null) {
            price = $('span.regular-price span').html()
            if(price){
                price=price.replace("&#xA3;","")
            }
        } else {

        price = getPrice(price);
        }
        return price;

    },
    image: function($) {
        var image = $('img.fotorama__img').attr('src');
        return image;

    }
}

var Search = {
    container: function($) {
        var searchProducts = $('div.product-item-info');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('strong.product.name.product-item-name').text();
        name = cleanName(name);
        return name;

    },
    price: function($, product) {
        let salePrice = $(product).find('.special-price').text()
        var price = $(product).find('span.price').text();
        price = getPrice(price);
        salePrice = getPrice(salePrice)
        
        if(salePrice != "") {
            price = salePrice
        } 
        return price;

    },
    url: function($, product) {
         var url = $(product).find('a').attr('href');
         return url; 
       
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Category = {
    name: function($) {
        return cleanName($("div.page-title h1").text());
    }
}
var Pagination = {

     items: function($) {
        var items = $('div.sns-products-container div.item');
        return parseInt(items.length)

     },
     pages: function($) {
        var pages = $('div.pages').text();
        pages = pages.match(/[0-9]+/g).pop();
        return parseInt(pages)

     }
}
