var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = elementOutfitters =  {
    'useJavascript': true,
    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('.productnamecolorLARGE span').html();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
return 'unchecked'
},
    price: function($) {
        var price = $('.product_productprice span').html();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('#product_photo_zoom_url img').attr('src');
        image = 'http:' + image;
        return image; 
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.v-product-grid .v-product');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.v-product__details a').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('.product_productprice b').html();
        price = getPrice(price);
        if(price){
            return price;
        }else{
            price =$(product).find('.product_saleprice').text()
            price = getPrice(price)
            return price
        }
        
    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return url;
    },
    image: function($, product) {
        var image = $(product).find('img').attr('src');
        image = 'http:' + image;
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('select.results_per_page_select').text();
        items = items.match(/[0-9]+/g);


        if(items) {
            items = items.pop();

            return parseInt(items);
        } else {
            return null;
        }

     },
     pages: function($) {
        var pages = $('nobr').text();
        pages = pages.match(/[0-9]+/g)

        if(pages) {
            pages = pages.pop();
            return parseInt(pages);
        } else {
            return null;
        }


     }
}

var Category = {
    name: function($) {
        var name = $('title').text();

        if(name.indexOf('|') > -1) {
            name = name.split('|').shift();
        }

        name = cleanName(name);
        return name;
    }
}
