var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('#product-details > div.row.visible-xl > div > div.product-h1-container.visible-xl-block > h1').text();
        name = cleanName(name);

        return name;
    },
    inStock: function ($) {
        let instock=true
        var price = $('span.value').text();
        if(!price){
            instock=false
        }
        return instock;
    },
    price: function ($) {
        var price = $('span.value').text();
        price = getPrice(price);

        return price;
    },
    image: function ($) {
        var image = $('#RICHFXViewerContainer___richfx_id_0_initialImage').attr('src');
        image = 'http:' + image;

        return image;
    },
    description: function ($) {
        var des = $('ul.pdp-features').text().replace(/\s+/g, " ").trim();

        return des;
    }
}

var Search = {
    container: function ($) {
        var product = $('div.product-tile-set');

        return product;
    },
    name: function ($, product) {
        var name = $(product).find('p.description').text();
        name = cleanName(name);

        return name;
    },
    price: function ($, product) {
        price = $(product).find('div.price').text();

        if (price == '') {
            price = null;
        } else {
            price = getPrice(price);
        }

        return price;
    },
    url: function ($, product) {
        var url = $(product).attr('data-pdp-url')
        return url;
    },
    image: function ($, product) {
        var image = $(product).find('img.img-responsive').attr('src');
        return image;
    }
}

/*var Pagination = {

     items: function($) {

     },
     pages: function($) {

     }
}*/

var Category = {
    name: function ($) {
        var name = $('#search-results > div.c_24127 > div > div > div > h1').text();
        name = cleanName(name);

        return name;
    }
}
