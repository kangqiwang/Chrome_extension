var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            //result.push(info)

            if(info.price !== null) { 
                result.push(info);
            }
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1#productTitle').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var inStock = true;
        var stockMessage = $('div#productAvailabilityMessage').text().toLowerCase();
        if (stockMessage && stockMessage.indexOf('out of stock') > -1) {
            inStock = false;
        }
        return inStock;
    },
    price: function($) {
        var price = $('div.bem-product-price__unit--pdp').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img.mainImage').attr('src');
        return 'http:' + image;
    },
    description: function($) {
        var description = $('div[itemprop=description]').text();
        if (description) {
            description = description.replace(/(\r|\n|\r\n)/gm, ' ').replace(/s\+/, ' ').trim();
            return description;
        }
    }
}

var Search = {
    container: function($) {
        return $('div.bem-product-list-item--grid');
    },
    name: function($, product) {
        var name = $(product).find('a.bem-product-thumb__name--grid').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product) .find('span.bem-product-price__unit--grid').text();       

        if(price.indexOf(" - ") > -1) {
            price = null;
        }

        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        return $(product).find('a.bem-product-thumb__name--grid').attr('href');
    },
    image: function($, product) {
        var image = $(product).find('a.bem-product-thumb__image-link--grid img').attr('src');
        return 'http:' + image;
    }
}

var Pagination = {
     items: function($) {
        var items = $('div.bem-paginator__block--align-right').text();
        items = items.match(/[0-9]+/g).pop(); 
        return parseInt(items);
     },
     pages: function($) {
        var items = $('div.bem-paginator__block--align-right').text();
        items = items.match(/[0-9]+/g).pop();

        var products = $('div.bem-paginator__text-block').text();
        products = products.match(/[0-9]+/g).pop();
        
        sum = products / items; 
        return Math.ceil(sum); 
     }
}

var Category = {
    name: function($) {
        var name = $('div.col-xs-8 div.bem-heading--3').text();
        name = cleanName(name);
        return name;
    }
}
