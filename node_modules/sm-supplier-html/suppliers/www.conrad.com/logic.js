var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require("../../lib/routine.js");

module.exports = replaceWithwebAddressChangeToCamelCase = {

    // 'sku': (url) => {
    //     return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    // },

    'sku': function (url) {
        var thisPattern = new RegExp(/^(\d{5,10}(?![\;\?\&\.\,])*$)/g);
        var osku = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(""));
        var sku = thisPattern.test(osku) ? osku : null;
        return sku;
    },

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo();
        info.name = Product.name($);
        //    info.sku = Product.sku($)
        info.inStock = Product.inStock($);
        info.price = Product.price($);
        info.image = Product.image($);
        info.country = 'uk';

        return info;
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = [];

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo();
            info.name = Search.name($, product);
            info.sku = Search.sku($, product);
            info.price = Search.price($, product);
            info.url = Search.url($,product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info);
        });

        return result;
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo();
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info;
    },

    'category': function ($, next) {
        var info = new CategoryInfo();
        info.name = Category.name($);

        return info;
    }
};

var Product = {
    name: function ($) {
        var name = $('h1.productdetail a').text();
        name = cleanName(name);
        return name;
    },
    sku: function ($) {
        var sku = $('div.number span').text();
        sku = sku.split('-')[0].trim();
        return sku;
    },
    inStock: function ($) {
        var isInStock = true;
        var producttop = $('#ProductDetailCartForm').html();

        if (producttop !== null) {
            if (producttop.indexOf('currently out of stock') > -1) {
                isInStock = false;
            }
        }
        return isInStock;
    },
    price: function ($) {
        var price = $('span.price').text();

        if (price.indexOf('.0') > -1) {
            price = price + '0';
        }
        price = getPrice(price);
        return price;
    },
    image: function ($) {
        var image = $('img#BigProductImage').attr('src');
        return image;
    },
};

var Search = {
    container: function ($) {
        var searchProducts = $('div.list-product-item');
        return searchProducts;
    },
    name: function ($, product) {
        var name = $(product).find('div.name').text();
        name = cleanName(name);
        return name;
    },
    sku: function ($, product) {
        var sku = $(product).find('div.bestnr strong').text();
        sku = sku.split('-')[0].trim();
        return sku;
    },
    price: function ($, product) {
        var price = $(product).find('span.current-price').text();
        if(price){
            price = price.replace(",",".")
        }
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('div.name a').attr('href');
        return url;
    },
    image: function ($, product) {
        var image = $(product).find('div.product-image img').attr('src');
        return image;
    }
};

var Pagination = {

    items: function ($) {
        var items = $('select#per-page-top').text();
        items = items.match(/[0-9]+/g);

        if (items) {
            items = items.pop();
            return parseInt(items);
        } else {
            return null;
        }

    },
    pages: function ($) {
        /*        var items = $('select#per-page-top').text();
                numitems = items.match(/[0-9]+/g).pop();*/

        var numitems = routine.matchNumbersAndPop($, 'select#per-page-top');

        /*        var products = $('span.result-count').text();
                products = products.match(/[0-9]+/g).pop();*/

        var products = routine.matchNumbersAndPop($, "span.result-count");

        /*        var sum = products / numitems;
                return Math.ceil(sum);*/

        return routine.pagesFromTotalAndProd(products, numitems);
    }
};

var Category = {
    name: function ($) {
        var name = $('div#breadcrumb a.last-item').text();
        name = cleanName(name);
        return name;
    }
};
