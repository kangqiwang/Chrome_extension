var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');

module.exports = mattel = {
    "useJavascript": true,
    'sku': (url) => {
        let thisPattern = new RegExp(/^([a-z]{0,5}\d{0,3}(?![\;\?\&\.\,])*$)/g);
        var osku = url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf("?"));
        let sku = thisPattern.test(osku) ? osku : null;
        return sku;
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = "us"

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("-")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = "us"

            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}
var Product = {
    name: function ($) {
        var name = $('.product-details h2').html();
        var name2 = $('h1.main_header').html();

        if (name === null) {
            name = name2
        }
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var isInStock = false;
        var producttop = $('.ps-online-seller-listings.ps-float-box').html();
        //var checkStock = $('span#ps_WTB').html();

        if (producttop !== null) {
            producttop.toLowerCase()
            if (producttop.indexOf('in stock') > -1) {
                isInStock = true
            }
        }

        // if (checkStock !== null) {
        //     if (checkStock.indexOf('More Ways to Buy') > -1) {
        //         isInStock = false;
        //     }
        // }

        return isInStock
    },
    price: function ($) {
        var price = $('.promotion-now').text();
        var price2 = $('.product_price').text()

        if (price === "") {
            price = price2
        }
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.product-picture a img').attr('src'); 9
        return image;
    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.product_listing_container li');

        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('div.product_name').text();

        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('[itemprop="price"]').text();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = $(product).find("div.product_name a").attr("href");

        if (url.indexOf('http://shop.mattel.com') === -1) {
            return 'http://shop.mattel.com' + url;
        } else {
            return url;
        }



    },
    image: function ($, product) {
        var image = "http:" + $(product).find('div.image img').attr('src');
        return image;
    }

}
var Pagination = {

    items: function ($) {
        var items = $('span.num_products').text();
        items = items.match(/\d+/g);

        if (items) {
            num = items.slice(1, 2);
            return num[0];
        } else {
            return null;
        }


    },
    pages: function ($) {
        var items = this.items($);

        var itemsTotal = $('span.num_products').text().match(/\d+/g);

        if (items && itemsTotal) {
            itemsTotal = itemsTotal[2];
            var pages = Math.ceil(itemsTotal / items);

            return String(pages);
        } else {
            return null;
        }



        /*        var items = $('div.pagination li.item-count').text();
                items = items.match(/\d+/g)
                num = items.slice(1, 2);

                var products = $('div.pagination li.item-count').text();
                products = products.match(/[0-9]+/g).pop();

                sum = products / num
                return String(Math.ceil(sum));*/

    }
}


var Category = {
    name: function ($) {
        var name = $('h4.navigation-heading').text();
        name = cleanName(name);
        return name;
    }
}

