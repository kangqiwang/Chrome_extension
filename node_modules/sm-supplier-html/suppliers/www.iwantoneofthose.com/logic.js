var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var instockCheck =require('../../lib/inStockCheck.js')
module.exports = iwoot =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var isInStock = true;
        var producttop = $('.product-stock-message').html();
        var checkstock = $('span.product-stock-message').html();
        var preorder = $('p.product-simple a').html();
        let check =$('.manchesterProductPage_productStockInformation').text()
        isInStock =instockCheck(check,isInStock)
        if(producttop !== null) {
            if(producttop.indexOf('despatched within a week') > -1) {
                isInStock = false;
            }
        }
        if(checkstock !== null) {
            if(checkstock.indexOf('Sold out') > -1) {
                isInStock = false;
            }
        }
        if(preorder !== null) {
            if(preorder.indexOf('Pre-Order Now') > -1) {
                isInStock = false;
            }
        }

        return isInStock
    },
    price: function($) {
        var price = $('.productPrice_price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('.main-product-image a').attr('href');
        return image;
    },
    description: function($) {
        var description = $('div[itemprop="description"]').text().trim();

        if(description !== null) {
            return description.replace(/(\r\n|\n|\r|\t)/gm,"");
        }
        return description;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('.productBlock');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('h2.productBlock_productName').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.productBlock_priceValue').text();
        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        var url = $(product).find('a.productBlock_link').attr('href');
        return 'https://www.iwantoneofthose.com'+url;
    },
    image: function($, product) {
        var image = $(product).find('img.productBlock_image').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('div.item');
        items = items.length;
        return parseInt(items);
     },
     pages: function($) {
        var items = $('div.item');
        numitems = items.length;

        var products = $('p.listTitle_results').text();
        products = products.match(/[0-9]+/g).pop();
        

        sum = products / numitems;
        return Math.ceil(sum);
     }
}

var Category = {
    name: function($) {
        var name = $('h1.responsiveProductListHeader_title').text();
        name = cleanName(name);
        return name;
    }
}
