var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var routine = require ("../../lib/routine.js"); 

module.exports = crocs =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },

    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = ''
        var heading = $('h1.product-name');
        if (heading.length == 0) {
            heading = $('h1.cx-brand-font.redText b')
        }
        if (heading.length) {
            name = cleanName(heading.text());
        }
        return name;
    },
    inStock: function($) {
        var inStock = true
        var stockcheck = $('h1.cx-brand-font.redText').text();

        if (stockcheck !== null) {
            stockcheck = stockcheck.toLowerCase();
            if (stockcheck.indexOf('is sold out') > -1) {
                inStock = false;
            }
        }

        return inStock
    },
    price: function($) {
        var price = $('span.product-price-lowest').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('ul.swiper-wrapper img').first().attr('src');
        return image;
    },
    description: function($) {
        var description = $('dd#product-details div.cx-copy').text();
        if(description !== null) {
            return description.replace(/\s+/gm, ' ').trim();
        }
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('ul.cx-productcard-list div.cx-productcard');
        return searchProducts;
    },
    name: function($, product) {
        var name = $(product).find('div.cx-productcard-name').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product).find('div.cx-price-current').text();
        if (price.indexOf(' to ') > -1) {
            return ''
        } else {
            price = getPrice(price);
            return price;
        }
    },
    url: function($, product) {
        var url = $(product).find('a').first().attr('href');
        return url;
    },
    image: function($, product) {
        var image = $(product).find('img.cx-productcard-photo').attr('src');
        return image;
    }
}

var Pagination = {

     items: function($) {
        return parseInt($('div.productCard').length);
     },
     pages: function($) {
        var numitems = $('div.productCard').length;

/*        var products = $('h3.itemCount').text();
        products = products.match(/[0-9]+/g).pop();*/
        var products = routine.matchNumbersAndPop($, "h3.itemCount");

/*        
        var sum = products / numitems;
        return Math.ceil(sum);*/

        return routine.pagesFromTotalAndProd(products, numitems);
     }
}

var Category = {
    name: function($) {
        var name = $('div.category-header h1').text();
        name = cleanName(name);
        return name;
    }
}
