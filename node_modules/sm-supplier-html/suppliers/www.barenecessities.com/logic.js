var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');


module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('ul.breadcrumbs li.mm_product_name').html();
        name = cleanName(name);
        return name;

    },
    inStock: function($) {
        return 'unchecked';

    },
    price: function($) {
        var price = $('span#spanOurPrice span').html();
        price = getPrice(price);
        return price;

    },
    image: function($) {
        var image = $('div#prodImg').attr('href');
        return image;
    },
    description: function($) {
        var description = $('ul.top-space li').text();
        return description;
    }
}

var Search = {
    container: function($) {
        var searchProducts = $('li.thumbnail-item');
        return searchProducts;

    },
    name: function($, product) {
        var name = $(product).find('li.fl-item a').html();
        var type = $(product).find('li.title a').html();
        name = cleanName(name);
        return name + " " + type;

    },
    price: function($, product) {
        var price = $(product).find('a.thmb_product_price').text();
        price = getPrice(price);
        return price;

    },
    url: function($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if(anchor) {
            url = $(anchor).attr('href');
        }
        return url;

    },
    image: function($, product) {
        var image = $(product).find('a.link-wrap img.thumbnail-image').attr('alt_image');
        return image;
        
    }
}

var Pagination = {

     items: function($) {
        var items = $('ul.no-bullet').text();
        if(items === ""){
            return null
        }else {
            items = items.match(/[0-9]+/g);
            items = JSON.parse(items[3]);
        }
        
        return items;

     },
     pages: function($) {
        var items = $('ul.no-bullet').text();
        if(items === ""){
            return null
        }else {
             items = items.match(/[0-9]+/g);
            items = JSON.parse(items[3]);
        }
       

        var products = $('span.results').text();
        
        if(products === ""){
            return null
        }else {
            products = products.match(/[0-9]+/g).pop();   
        }

        sum = products / items;
        return Math.ceil(sum);


     }
}
var Category = {
    name: function($) {
        var name = $('div.breadcrumbs li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}
