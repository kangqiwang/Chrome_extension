var should = require('should');
var Structure = require('../lib/structure.js')
const cache = require('../lib/cache')




describe('www.boots.com', function() {


    describe('Search Page', function() {

        var payload = {
            "pageType" : "search",
            "url" : "https://www.boots.com/baby-child/toys/all-toys",
            "html": cache.load("https://www.boots.com/baby-child/toys/all-toys")
        }

        it('should return 24 products', function (done) {
            Structure(payload, function(err, result) {
                result.length.should.equal(24);
                done()
            })
        });

        it('last product should be Casdon Pick & Mix Sweet Shop', function (done) {
            Structure(payload, function(err, result) {
                var last = result.pop()
                var expected = JSON.stringify({
                    barcode: null,
                    name: 'Casdon Pick & Mix Sweet Shop',
                    price: '12.00',
                    url: 'https://www.boots.com/casdon-pick-and-mix-sweet-shop-10141567',
                    image: 'https://boots.scene7.com/is/image/Boots/10141567?id=-Klmv1&fmt=jpg&fit=constrain,1&wid=504&hei=548',
                    country: 'uk'
                })

                JSON.stringify(last).should.equal(expected)
                done()
            });
        })

        it('first product should be Fisher Price Deluxe Kick and Play Piano', function(done) {
            Structure(payload, function(err, result) {
                var first = result.shift()
                var expected = JSON.stringify({
                    barcode: null,
                    name: 'Fisher Price Deluxe Kick and Play Piano',
                    price: '44.99',
                    url: 'https://www.boots.com/fisher-price-deluxe-kick-play-piano-gym-10257505',
                    image: 'https://boots.scene7.com/is/image/Boots/10257505?id=-Klmv1&fmt=jpg&fit=constrain,1&wid=504&hei=548',
                    country: 'uk'
                })
                JSON.stringify(first).should.equal(expected)
                done()
            })

        })

    });

    describe('Search page category', function() {

        var payload = {
            "pageType" : "category",
            "url" : "https://www.boots.com/baby-child/toys/all-toys",
            "html": cache.load("https://www.boots.com/baby-child/toys/all-toys")
        }

        it('should be true when number of items and pages correct', function (done) {

            Structure(payload, function(err, category) {
                var expected = JSON.stringify({
                    "name": "all toys",
                    "url":"https://www.boots.com/baby-child/toys/all-toys"
                })
                JSON.stringify(category).should.equal(expected);
                done()
            })
        });

    });

    describe('Search page pagination', function() {

        var payload = {
            "pageType" : "pagination",
            "url" : "http://www.boots.com/en/Toys/New-Toys/",
            "html": cache.load("http://www.boots.com/en/Toys/New-Toys/")
        }

        it('should be true when number of items and pages correct TTTTTTT', function (done) {

            Structure(payload, function(err, pagination) {
                var expected = JSON.stringify({
                    "items": 200,
                    "pages": 21,
                    "url" : "http://www.boots.com/en/Toys/New-Toys/"
                })
                JSON.stringify(pagination).should.equal(expected);
                done()
            })
        });

    });


    describe('In Stock Page', function() {

        var payload = {
            "pageType" : "product",
            "url" : "https://www.boots.com/no7/no7-shop-all/no7-extreme-length-waterproof-mascara-10143353",
            "html": cache.load("https://www.boots.com/no7/no7-shop-all/no7-extreme-length-waterproof-mascara-10143353")
        }

        it('should be true when product is in stock', function () {
            
            const inStockPage =  Structure(payload)      
            console.log(inStockPage)      
            inStockPage.name.should.be.equal("No7 Extreme Length Waterproof Mascara 7ml");
            inStockPage.price.should.be.equal("13.00");
            inStockPage.url.should.be.equal("https://www.boots.com/no7/no7-shop-all/no7-extreme-length-waterproof-mascara-10143353");
            inStockPage.inStock.should.be.equal(true);
            should(inStockPage.stockLevel).be.equal(null);
            should(inStockPage.image).be.equal(null);
            inStockPage.country.should.be.equal('uk');            
         });
 
    });


    describe('Out of Stock Page', function() {

        var payload = {
            "pageType" : "product",
            "url" : "https://www.boots.com/splash-about-happy-nappy-swimming-pink-blossom-10246079",
            "html": cache.load("https://www.boots.com/splash-about-happy-nappy-swimming-pink-blossom-10246079")
        }

        it('should return false when product is out of stock', function(done) {

            Structure(payload, function(err, inStockPage) {
                var expected = JSON.stringify({
                    "name": "Splash About Happy nappy swimming pink blossom",
                    "price": "11.00",
                    "url": "https://www.boots.com/splash-about-happy-nappy-swimming-pink-blossom-10246079",
                    "inStock": false,
                    "stockLevel": null,
                    "country": 'uk'
                })
                JSON.stringify(inStockPage).should.equal(expected);
                done()
            })
        })

    })

     describe('Checking to see if no pagination works', function() {

        var payload = {
            "pageType" : "pagination",
            "url" : "http://www.boots.com/",
            "html": cache.load("http://www.boots.com/")
        }

        it('should return 0 items and null pages', function (done) {

            Structure(payload, function(err, pagination) {
                var expected = JSON.stringify({
                    "items": null,
                    "pages": null,
                    "url": payload.url
                })
                JSON.stringify(pagination).should.equal(expected);
                done()
            })
        });

    })

});