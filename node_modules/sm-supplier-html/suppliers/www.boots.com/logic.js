var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var routine = require("../../lib/routine.js");
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = boots = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var isInStock = true;

        try {
            var contentarea = $('div#sold_out_text').css('display')
        } catch (error) {
            
        }
        
        if (contentarea !== 'none') {
                isInStock = false
        }
        /*
        if (notfound !== null) {
            notfound = notfound.toLowerCase();
            if ((notfound.indexOf("we know this can be frustrating") > -1)) {
                isInStock = false
            }
        }
        if (stockComingSoon !== null) {
            if ((stockComingSoon.indexOf("Stock coming soon") > -1)) {
                isInStock = false
            }
        }
*/
        return isInStock

    },
    price: function ($) {
        var price = $('div.price').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('img').attr('src');
        return null


    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.estore_product_container');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('div.product_name').text();
        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('div.product_price').text();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = $(product).find('a').attr('href')
        return url;


    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('li.resultsPerPage ul').html();

        if (items !== null) {
            items = items.match(/[0-9]+/g).pop();
            items = parseInt(items);
        } else {
            if (Search.container($).length > 0) {
                items = 1;
            }
        }

        return items;
    },
    pages: function ($) {

        var result = null;
        var pages = $('li.paginationTop li.last a').html();

        if (pages !== null) {

            pages = pages.match(/[0-9]+/g).pop();
            result = parseInt(pages);
        } else {
            if (Search.container($).length > 0) {
                result = 1;
            }
        }

        return result;



    }
}

var Category = {
    name: function ($) {
        var name = $('h1').text();
        name = cleanName(name);
        return name;
    }
}