module.exports = (payload, version) => {


	const _calculateStringDistance = (value) => {

		var customerStringValue = {
			0: 0,
			1: 0.01,
			2: 0.02,
			3: 0.03,
			4: 0.04,
			5: 0.05,
			6: 0.06,
			7: 0.07,
			8: 0.08,
			9: 0.09,
			10: 0.1,
			11: 0.11,
			12: 0.12,
			13: 0.13,
			14: 0.14,
			15: 0.15
		}

		var result = customerStringValue[value]
		return result



		// if(payload.userId === "585d5951cc787451ccefab7e") {
		// 	var result = customerStringValue[value]
		// 	console.log(result)
		// 	return result
		// } else {
		// 	let result = 0;
		// 	/*
		// 	Slider values:
		// 	0 -> 90 = 0.05 -> 0.2
		// 	91 -> 100 = 0.28 -> 1
		// 	*/
		// 	let ninetyPercentPoint = 90;
		// 	let zeroValue = 0.05;
		// 	let ninetyPercentValue = 0.2;
		// 	let hundredPercentValue = 1;

		// 	let stepSize = (ninetyPercentValue - zeroValue) / ninetyPercentPoint;
		// 	if (value <= ninetyPercentPoint) {
		// 		result = zeroValue + (value * stepSize);
		// 	} else {
		// 		let bigSteps = (hundredPercentValue - ninetyPercentValue) / (100 - ninetyPercentPoint);
		// 		result = ninetyPercentValue + (bigSteps * (value - ninetyPercentPoint));
		// 	}

		// 	console.log(result)
		// 	return result;
		// }
	};

	var body = {
		"query": {
			"bool": {
				"must": [],
				"must_not": []
			}
		}
	}

	if (Object.keys(payload.filter).length === 0) {

		return {
			"query": {
				"match_all": {}
			}
		}
	}

	if (!payload.csv) {
		payload.userMatchedProducts.map((singleProduct) => {
			var userMatchQuery = {
				"bool": {
					"must": [{
						"term": {
							"supplier.id": singleProduct.supplierProductId
						}
					}]
				}
			}

			body.query.bool.must_not.push(userMatchQuery)
		})
	}

	if (payload.deleted) {
		payload.deleted.map((singleId) => {
			var hideDeletedQuery = {
				"bool": {
					"must": [{
						"term": {
							"_id": singleId
						}
					}]
				}
			}

			body.query.bool.must_not.push(hideDeletedQuery)
		})
	}

	body.query.bool.must_not.push({
		"match": {
			"supplier.domain": "www.toysrus.co.uk"
		}
	});

	body.query.bool.must_not.push({
		"match": {
			"supplier.domain": "www.toysrus.com"
		}
	});

	body.query.bool.must_not.push({
		"match": {
			"supplier.domain": "www.tesco.com"
		}
	});


	var ukCats = [
		"573352",
		"10395651",
		"329083031",
		"340321031",
		"418466031",
		"617419011",
		"1330675031",
		"1338216031",
		"pet_products_display_on_website",
		"toy_display_on_website",
		"video_games_display_on_website",
		"watch_display_on_website",
		"pc_display_on_website",
		"home_improvement_display_on_website",
		"dvd_display_on_website",
		"software_display_on_website",
		"baby_product_display_on_website",
		"major_appliances_display_on_website",
		"ce_display_on_website",
		"jewelry_display_on_website",
		"clothing_display_on_website",
		"luggage_display_on_website",
		"kitchen_display_on_website",
		"biss_basic_display_on_website",
		"sports_display_on_website",
		"shoes_products_display_on_website",
		"beauty_display_on_website",
		"lighting_display_on_website",
		"book_display_on_website",
		"alcoholic_beverage_display_on_website",
		"health_and_beauty_display_on_website",
		"music_display_on_website",
		"grocery_display_on_website",
		"musical_instruments_display_on_website",
		"automotive_display_on_website",
		"lawn_and_garden_display_on_website",
		"home_and_garden_display_on_website",
		"office_product_display_on_website"
	]

	var usCats = [
		"329083031",
		"toy_display_on_website",
		"pet_products_display_on_website",
		"beauty_display_on_website",
		"software_display_on_website",
		"pc_display_on_website",
		"wireless_display_on_website",
		"biss_display_on_website",
		"dvd_display_on_website",
		"lawn_and_garden_display_on_website",
		"fashion_display_on_website",
		"ce_display_on_website",
		"home_improvement_display_on_website",
		"grocery_display_on_website",
		"musical_instruments_display_on_website",
		"luggage_display_on_website",
		"guild_product_display_on_website",
		"furniture_display_on_website",
		"book_display_on_website",
		"pantry_display_on_website",
		"photo_display_on_website",
		"video_games_display_on_website",
		"art_and_craft_supply_display_on_website",
		"automotive_display_on_website",
		"home_garden_display_on_website",
		"sports_display_on_website",
		"office_product_display_on_website",
		"health_and_beauty_display_on_website",
		"kitchen_display_on_website",
		"major_appliances_display_on_website",
		"mobile_application_display_on_website",
		"music_display_on_website",
		"sdp_misc_display_on_website",
		"smart_home_display_on_website",
		"amazon_devices_display_on_website",
		"baby_product_display_on_website",
		"biss_basic_display_on_website",
		"entmnt_collectibles_display_on_website",
		"7161082011"
	]



	Object.keys(payload.filter).map(function (key) {

		if (payload.filter[key].state === 'on') {
			switch (key) {

				case 'hideOos':
					body.query.bool.must_not.push({
						"match": {
							"productChecks.stock": "OUT_STOCK"
						}
					})
					break;
				case 'hideChecked':
					body.query.bool.must_not.push({
						"match": {
							"supplier.matchStatus": "checked"
						}
					})
					break;
				case 'hideNoCat':
					body.query.bool.must.push({
						"terms": {
							"amazon.category": payload.country === "uk" ? ukCats : usCats
						}
					})
					break
				case 'productsWithoutBuyBox':
					body.query.bool.must_not.push({
						"match": {
							"productChecks.hasBuyBox": false
						}
					})
					break;
				case 'rmLargeAppliances':
					body.query.bool.must_not.push({
						"match": {
							"amazon.category": "major_appliances_display_on_website"
						}
					})
					break;
				case 'noAmazonOrFbaCompetition':
					body.query.bool.must.push({
						"match": {
							"productChecks.merchantOnly": true
						}
					})
					break;
				case 'thresholdFilter':
					body.query.bool.must.push({
						"match": {
							state: "OUTSIDE_THRESHOLD"
						}
					})
					break;
				case 'addFbaCharges':
				case 'addVat':
					// case 'hideNoCat':
					// WE don't do anything with these filters when we display the results
					break;
				default:
					var range = _buildRange(key, payload);
					body.query.bool.must.push({
						range: range
					});
					break;
			}

		} else {}

	});

	if (payload.pathname === '/wishlist' || payload.pathname === '/buylist' || payload.pathname === '/distribute') {
		/* do nothing */
	} else {
		if (payload.filter.search.selected && payload.filter.search.selected !== 'all') {
			body.query.bool.must.push({
				"match": {
					"jobId": payload.filter.search.selected
				}
			});
		}
	}

	if (payload.filter.categories.selected !== 'all') {
		body.query.bool.must.push({
			"match": {
				"amazon.category": payload.filter.categories.selected
			}
		});
	}

	if (payload.filter.minimumAmazonPrice.value !== null && payload.filter.minimumAmazonPrice.value !== '') {
		body.query.bool.must.push({
			range: {
				"amazon.price": {
					gte: parseFloat(payload.filter.minimumAmazonPrice.value)
				}
			}
		});
	}

	if (payload.filter.maxBuyPriceFromSupplier.value !== null && payload.filter.maxBuyPriceFromSupplier.value !== '') {

		body.query.bool.must.push({
			range: {
				"supplier.price": {
					lte: parseFloat(payload.filter.maxBuyPriceFromSupplier.value)
				}
			}
		});
	}

	if (payload.filter.minimumProfit.value !== null && payload.filter.minimumProfit.value !== '') {
		body.query.bool.must.push({
			range: {
				"amazon.details.profit": {
					gte: parseFloat(payload.filter.minimumProfit.value)
				}
			}
		});
	}

	if (payload.filter.minimumRoi.value !== null && payload.filter.minimumRoi.value !== '') {
		var b = {
			range: {
				"amazon.details.ROI": {
					gte: parseFloat(payload.filter.minimumRoi.value)
				}
			}
		}
		if (payload.filter.maximumRoi && payload.filter.maximumRoi.value !== null) {
			b.range["amazon.details.ROI"].lte = parseFloat(payload.filter.maximumRoi.value)
		}
		body.query.bool.must.push(b);

	}

	if (payload.filter.salesRankFilter.value !== null && payload.filter.salesRankFilter.value !== '' && payload.filter.sortBySalesRank === 'salesRankPercentage') {
		body.query.bool.must.push({
			range: {
				"amazon.details.salesRankPercentage": {
					lte: parseFloat(payload.filter.salesRankFilter.value),
					gte: 0
				}
			}
		});
	} else {
		if (payload.filter.salesRankReal) {
			let salesRankRange = {
				range: {
					"amazon.details.salesRank": {
						"gte": payload.filter.salesRankReal.min,
						"lte": payload.filter.salesRankReal.max,
					}
				}
			}

			body.query.bool.must.push(salesRankRange);
		}
	}

	if (payload.filter.suppliers.selected !== 'all') {
		body.query.bool.must.push({
			"match": {
				"supplier.domain": payload.filter.suppliers.selected
			}
		});
	}

	if (payload.filter.textSearch.value !== '') {
		body.query.bool.must.push({
			"multi_match": {
				"query": payload.filter.textSearch.value,
				"fields": ["supplier.productTitle", "amazon.productTitle", "supplier.barcode", "amazon.asin"]
			}
		})
	}

	if (payload.opps) {
		if (payload.opps.length > 0) {
			payload.opps.map((opp) => {
				body.query.bool.must_not.push({
					"match": {
						"id": opp
					}
				});
			})
		}
	}


	if (payload.wishlist || payload.buylist || payload.distribute) {
		/* do nothing */
	} else {
		if (payload.filter.stringDistance && payload.filter.stringDistance.value >= 0) {

			let sliderDistance = _calculateStringDistance(payload.filter.stringDistance.value);

			let matchDistance = {
				range: {
					"supplier.matchDistance": {
						lte: parseFloat(sliderDistance)
					}
				}
			};
			body.query.bool.must.push(matchDistance);
		}
	}


	if (payload.filter.sortBy.selected == "newestToOldest") {
		body.aggs = {
			"suppliers": {
				"terms": {
					"field": "supplier.domain",
					"size": 100
				}
			},
			"categories": {
				"terms": {
					"field": "amazon.category",
					"size": 100
				}
			},
			"brandRestrictions": {
				"terms": {
					"field": "amazon.brandRestrictionResults.resultCode"
				}
			},
			"uniqueIds": {
				"terms": {
					"field": "supplier.id",
					"size": 10000,
					"order": {
						"created": "desc"
					}
				},
				"aggs": {
					"created": {
						"max": {
							"field": "created"
						}
					},
					"recordId": {
						"terms": {
							"field": "_id",
							"size": 1
						}
					}
				}
			}
		}
	} else if (payload.filter.sortBy.selected == "oldestToNewest") {
		body.aggs = {
			"suppliers": {
				"terms": {
					"field": "supplier.domain",
					"size": 100
				}
			},
			"categories": {
				"terms": {
					"field": "amazon.category",
					"size": 100
				}
			},
			"brandRestrictions": {
				"terms": {
					"field": "amazon.brandRestrictionResults.resultCode"
				}
			},
			"uniqueIds": {
				"terms": {
					"field": "supplier.id",
					"size": 10000,
					"order": {
						"created": "asc"
					}
				},
				"aggs": {
					"created": {
						"max": {
							"field": "created"
						}
					},
					"recordId": {
						"terms": {
							"field": "_id",
							"size": 1
						}
					}
				}
			}
		}

	} else if (payload.filter.sortBy.selected == "salesRankPercent") {
		body.aggs = {
			"suppliers": {
				"terms": {
					"field": "supplier.domain",
					"size": 100
				}
			},
			"categories": {
				"terms": {
					"field": "amazon.category",
					"size": 100
				}
			},
			"brandRestrictions": {
				"terms": {
					"field": "amazon.brandRestrictionResults.resultCode"
				}
			},
			"uniqueIds": {
				"terms": {
					"field": "supplier.id",
					"size": 10000,
					"order": {
						"salesRankPercentage": "asc"
					}
				},
				"aggs": {
					"salesRankPercentage": {
						"min": {
							"field": "amazon.details.salesRankPercentage"
						}
					},
					"recordId": {
						"terms": {
							"field": "_id",
							"size": 1
						}
					}
				}
			}
		}

	} else {
		body.aggs = {
			"suppliers": {
				"terms": {
					"field": "supplier.domain",
					"size": 100
				}
			},
			"categories": {
				"terms": {
					"field": "amazon.category",
					"size": 100
				}
			},
			"brandRestrictions": {
				"terms": {
					"field": "amazon.brandRestrictionResults.resultCode"
				}
			},
			"uniqueIds": {
				"terms": {
					"field": "supplier.id",
					"size": 10000,
					"order": {
						"salesRank": "asc"
					}
				},
				"aggs": {
					"salesRank": {
						"min": {
							"field": "amazon.details.salesRankPercentage"
						}
					},
					"recordId": {
						"terms": {
							"field": "_id",
							"size": 1
						}
					}
				}
			}
		}
	}

	//if (version === 5.5) {
	//	body.aggs.brandRestrictions.terms.field = "amazon.brandRestrictionResults.resultCode"
	//}

	body.sort = []

	// TODO: Should chaned created to updated.  Currently though updated is not always present
	if (payload.filter.sortBy.selected == "newestToOldest") {
		body.sort.push({
			"created": {
				"order": "desc"
			}
		})
	}

	if (payload.filter.sortBy.selected == "oldestToNewest") {
		body.sort.push({
			"created": {
				"order": "asc"
			}
		})
	}

	if (payload.filter.sortBy.selected === "ProfitHigh") {
		body.sort.push({
			"amazon.details.profit": {
				"order": "desc"
			}
		})
	}

	if (payload.filter.sortBy.selected === "roiHigh") {
		body.sort.push({
			"amazon.details.ROI": {
				"order": "desc"
			}
		})
	}

	if (payload.filter.sortBy.selected === "salesRankLow") {
		body.sort.push({
			"amazon.details.salesRank": {
				"order": "asc"
			}
		})
	}

	if (payload.filter.sortBy.selected === "salesRankPercent") {
		body.sort.push({
			"amazon.details.salesRankPercentage": {
				"order": "asc"
			}
		})
	}

	return body;
}

const _buildRange = (key, payload) => {

	var range = {};
	range[key] = {};

	var value = JSON.parse(payload.filter[key].value.split(','));

	if (payload.filter[key].over100 === 'on') {
		range[key].gte = value[0];
	} else {
		range[key].gte = value[0];
		range[key].lte = value[1];
	}

	return range;

}