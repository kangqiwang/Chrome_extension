var SearchPageInfo = require('../../lib/searchPageInfo.js')
var ProductPageInfo = require('../../lib/productPageInfo.js')
var logger = require('../../lib/logger.js')
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');

module.exports = {
    //"useJavascript" : true,
    'search': function ($, next) {
        var result = []

        $('.items__list').find('.items__item').map(function (index, product) {

            var info = new SearchPageInfo()
            info.name = searchName($, product)
            info.price = searchPrice($, product)
            info.url = url($, product)
            info.image = searchImage($, product)
            info.country = "uk"
            result.push(info)
        });

        // var pages = getNumberOfPages($)
        // for (var i = 0; i < result.length; i++)
        // {
        //     var info = result[i]
        //     info.pages = pages
        //     result[i] = info
        // }

        return result
    },

    'product': function ($, next) {
        var info = new ProductPageInfo()
        info.inStock = isStock($)
        info.price = getThePrice($, info.inStock)
        info.name = getName($, info.inStock)
        info.image = image($, info.inStock)
        info.country = "uk"
        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }
}


function url($, product) {
    var link = $(product).find('a').attr('href')
    return "https://www.harveynichols.com/" + link

}


function searchName($, product) {
    var brand = $(product).find('div.product__text .product__brand').text()
    var name = $(product).find('div.product__text .product__name').text()
    name = cleanName(brand +' '+name)
    return name
}


function searchPrice($, product) {
    var price = $(product).find('.product-price__special').text()
    price = getPrice(price)
    if(price){
        return price
    }else{
        price = $(product).find('.product-price__regular').text()
        price = getPrice(price)
        return price
    }
    
}


function getNumberOfPages($) {
    var pages = $('.js-pagination-pages-bottom div').toArray()
    pages = (($(pages[pages.length - 1]).text().trim()))
    return pages
}

function searchImage($, product) {
    var image = $(product).find('img').attr('src');
    return image;
}





var isStock = function inStock($) {
    var isInStock = true;
    var contentarea = $('.product-shop').html()
    if (contentarea !== null) {
        if ((contentarea.indexOf('Not in Stock') > -1)
            || (contentarea.indexOf('unavailable') > -1)) {
            isInStock = false
        }
    }
    return isInStock
}

var getThePrice = function thePrice($, instock) {
    var price = $('.price-box').text()
    price=getPrice(price)
    return price
}

var getName = function theName($, instock) {
    var name = $('h1').text();
    name = cleanName(name);
    return name;
}

var image = function image($, instock) {
    var image = $('#imageslider img').attr('src');
    return image;
}
var Category = {
    name: function ($) {
        var name = $('h1.category-heading').text();
        name = cleanName(name);
        return name;
    }
}

var Pagination = {

    items: function ($) {
        var items = $('.item');

        var products = $('li.products-number').text();
        products = products.match(/[0-9]+/g)

        if (items && products) {
            items = items.length;
            return parseInt(items);
        } else {
            return null;
        }


    },
    pages: function ($) {
        var items = $('.item');





        var products = $('li.products-number').text();
        products = products.match(/[0-9]+/g)

        if (products && items) {
            items = items.length;
            products = products.pop();

            sum = products / items
            return Math.ceil(sum)
        } else {
            return null;
        }





    }
}