var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var instockCheck =require('../../lib/inStockCheck.js')
module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo();
        info.name = Product.name($);
        info.inStock = Product.inStock($);
        info.price = Product.price($);
        info.image = Product.image($);
        info.country = 'uk'

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('span.name').text();
        var brand =$('span.brand').text()
        brand = cleanName(brand)
        name = cleanName(name);
        return brand+' '+name;

    },
    inStock: function ($) {
        var isInStock = true;
        var stockcheck = $('span[class="sec-red"]').first().text();
        isInStock = instockCheck(stockcheck,isInStock)
        return isInStock
    },
    price: function ($) {
        var price = $('.product-price-group .prod-price').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('li.coach img').attr('src');
        return image;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('.s-productthumbbox')
        return searchProducts;

    },
    name: function ($, product) {
        var brand = $(product).find('.productdescriptionbrand').text();
        var name = $(product).find('.productdescriptionname').text();

        //    if(name !== null) {
        //        name = name.replace(/<span.*>/g,' ')
        //                    .replace(/<\/span>/g,' ')
        //                    .replace('New - ','')
        //                    .replace(/\n/g,'')
        //                    .replace(/\s\s+/g,' ')
        //    }
        name = cleanName(brand + ' ' + name);

        return name;

    },
    price: function ($, product) {
        var price = $(product).find('span.prod-price.prod-price-now').html();
        if (price === null) {
            price = $(product).find('.s-producttext-price').html();
        }
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return 'https://www.houseoffraser.co.uk' + url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;
    }
}

var Category = {
    name: function ($) {
        return cleanName($("h1.category-heading")
            .text())
            .split(" (")[0];
    }
}
var Pagination = {

    items: function ($) {

        var match = cleanName($("p.paging-links").text())
            .split("All")[0]
            .match(/[0-9]+/g);

        if (match) {
            return parseInt(match[0])
        } else {
            return null;
        }
        /*
                ("........",cleanName($("p.paging-links").text())
                    .split("All")[0]
                    .match(/[0-9]+/g), "........");
        
                return parseInt(cleanName($("p.paging-links").text())
                    .split("All")[0]
                    .match(/[0-9]+/g)[0]);*/

    },
    pages: function ($) {

        /*        return Math.ceil(cleanName($("p.paging-items-summary").text())
                    .split("Showing")[1]
                    .match(/[0-9]+/g)[2] / Search.container($).length);*/

        var match = cleanName($("p.paging-items-summary").text())
            .split("Showing")[1]
            .match(/[0-9]+/g);
        if (match) {
            return Math.ceil(match[2] / Search.container($).length);
        } else {
            return null;
        }
    }
}
