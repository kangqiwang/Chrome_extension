var PageInfo = require('../../lib/pageInfo.js')
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var routine = require("../../lib/routine.js");
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = {
    'product': function ($, next) {
        var info = new PageInfo()
        info.inStock = isStock($)
        info.price = price($)
        info.name = getName($)
        info.image = image($)
        info.country = 'uk'
        return info
    },

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/") + 1, url.lastIndexOf(".prd"))
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/") + 1, Search.url($, product).lastIndexOf(".prd"));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            if (info.name != '' && info.price) {
                result.push(info)
            }
        });
        //

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var isStock = function inStock($) {
    var isInStock = true;
    var availability = $('#hd-msg-3').html();
    var checkstock = $('#cc-msg-2').html();
    // var unavailable = $('span').text()
    let isinstockchecker= $('h3').first().siblings().text()
    if(isinstockchecker !== ''){
        (isinstockchecker)
        isinstockchecker=isinstockchecker.toLowerCase()
        if(isinstockchecker.indexOf('unavailable') > -1) {
            isInStock = false
        }
    }
    

    // if (unavailable !== null) {
    //     if (unavailable.indexOf('Unavailable') > -1) {
    //         isInStock = false
    //     }
    // }

    if (availability !== null) {
        if (availability.indexOf('Unavailable for Home delivery.') > -1) {
            isInStock = false
        }
    }

    if (checkstock !== null) {
        checkstock = checkstock.toLowerCase();
        if (checkstock.indexOf('out of stock') > -1) {
            isInStock = false;
        }
    }

    return isInStock
}

var price = function thePrice($) {
    let price = $('div[data-test-id="productPrice"] div').first().text()
    price = getPrice(price.trim()+'.00')
    return price
}

var getName = function theName($) {
    let name= $('h1').text()
    name= cleanName(name)
    return name
}
var image = function image($) {
    var image = $('img').attr('src')
    return image;
}
var Category = {
    name: function ($) {
        return "test";
    }
}

var Search = {
    container: function ($) {
        let container = $('div>ul>li');
        return container

    },
    name: function ($, product) {
        var name = $(product).find('[data-test-id="productTitle"]').text()
        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('[data-test-id="productPrice"]>div>span').last().text()
        price = getPrice(price + '.00')
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('[data-test-id="product-panel-main-section"]')
        if (anchor) {
            url = 'https://www.diy.com' + $(anchor).attr('href');
        }
        return url;

    },
    image: function ($, product) {
        var image = $(product).find('img').attr('src');
        return image;

    }
}


var Pagination = {

    items: function ($) {
        var items = $('ul.product-grid-view');
        items = items.length;
        return parseInt(items);

    },
    pages: function ($) {
        // var items = $('').html(); 
        // numitems = items.match(/[0-9]+/g).pop();

        /*        var pages = $('ul.paginator li').eq("-3").text();
                pages = pages.match(/[0-9]+/g).pop();
                return parseInt(pages);*/

        return routine.matchNumbersAndPop($, "div.pagination span.pages-qty");
    }
}

var Category = {
    name: function ($) {
        var name = $('ul[itemprop*="breadcrumb"] li').eq("-1").text();
        name = cleanName(name);
        return name;
    }
}