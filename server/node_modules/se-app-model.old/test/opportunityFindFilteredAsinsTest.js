const should = require('should');
const OpportuntiyModel = require('../index.js').model.opportunity

const expect = require('chai').expect;

const config = require('../config').es;
const util = require('util');



describe('Opportunity FindFilteredAsins Test', function () {

    let payload;

    beforeEach(() => {
        payload = {
            filter: {
                loading: false,
                showFilter: true,
                minimumRoi: { value: 20 },
                minimumProfit: { value: 3.5 },
                cashBackAmount: { value: '' },
                shippingFee: { value: '' },
                salesRankFilter: { value: 7 },
                minimumAmazonPrice: { value: 1 },
                maxBuyPriceFromSupplier: { value: '' },
                productsWithoutBuyBox: { state: 'off' },
                thresholdFilter: { state: 'off' },
                noAmazonOrFbaCompetition: { state: 'off' },
                fullfilmentFeesPerItem: { value: '' },
                addFbaCharges: { state: 'off' },
                addVat: { state: 'off' },
                monthOneStorageFee: { value: '' },
                sortBy:
                {
                    selected: 'newestToOldest',
                    records:
                    {
                        newestToOldest: { name: 'Newest To Oldest' },
                        oldestToNewest: { name: 'Oldest To Newest' }
                    }
                },
                suppliers:
                {
                    selected: 'all',
                    records: { 'www-smythstoys-com': { name: 'SmythsToys (Custom URLs)', total: 1 } }
                },
                categories:
                {
                    selected: 'all',
                    records: { unknown: { name: 'unknown', total: 1 } }
                },
                search: { selected: 'all' },
                textSearch: { value: '' },
                x4Plan: 'launch',
                maximumRoi: { value: 34.9 }
            },
            size: 1,
            start: 0
        }
    });

    this.timeout(10000)

    it('should return an array of asins', function (done) {
        var Opportunity = new OpportuntiyModel(config, {
            country: 'us',
            userName: 'mike',
            wishlist: true
        });
        Opportunity.findFilteredAsins(payload, (err, result) => {
            should(err).be.equal(null)
            result.should.have.property('total')
            result.should.have.property('records')
            result.records.length.should.be.above(0)
            result.total.should.equal(result.records.length)
            done();
        });
    });

    it('should return asins as objects if the country is "us"', (done)=>{
        var Opportunity = new OpportuntiyModel(config, {
            country: 'us',
            userName: 'mike',
            wishlist: true
        });
        Opportunity.findFilteredAsins(payload, (err, result) => {
            should(err).be.equal(null)
            expect(result.records[0]).to.be.an('Object');
            expect(result.records[0]).to.have.property('asin');
            expect(result.records[0].asin).to.have.length(10);
            done();
        });
    });

    it('should return asins as objects if the country is "uk"', (done)=>{
        config.createIdKey = false
        var Opportunity = new OpportuntiyModel(config, {
            country: 'uk',
            userName: 'mike',
            wishlist: true
        });
        Opportunity.findFilteredAsins(payload, (err, result) => {
            should(err).be.equal(null)
            expect(result.records[0]).to.be.an('Object');
            expect(result.records[0]).to.have.property('asin');
            expect(result.records[0].asin).to.have.length(10);
            done();
        });
    });

})
