var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            result.push(info)
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1.productView-title').text();
        name = cleanName(name);

        return name;
    },
    inStock: function($) {
        var inStock = true
        var stockcheck = $('div#instocknotify-container:not([style="display: none;"])').text()

        if (stockcheck !== null) {
            stockcheck = stockcheck.toLowerCase();
            if (stockcheck.indexOf('not in stock') > -1) {
                inStock = false;
            }
        }
        return inStock
    },
    price: function($) {
        var price = $('span.price').text();
        price = getPrice(price);

        return price;
    },
    image: function($) {
        var image = $('img.zoomImg').attr('src');

        return image;
    },
}

var Search = {
    container: function($) {
        var product = $('div.productBlockContainer div.prod-item');

        return product;
    },
    name: function($, product) {
        var name = $(product).find('h4.prod-name').text();
        name = cleanName(name);

        return name;
    },
    price: function($, product) {
        var price = $(product).find('span.price').text();
        price = getPrice(price);

        return price;
    },
    url: function($, product) {
        var url = $(product).find('h4.prod-name a').attr('href');

        return url;
    },
    image: function($, product) {
        var image = $(product).find('img.card-image').attr('src');

        return image;
    }
}
var Pagination = {

     items: function($) {
        var items = $('ul.ProductList li');
        items = items.length;
        return parseInt(items);

     },
     pages: function($) {
        // var items = $('').html(); 
        // numitems = items.match(/[0-9]+/g).pop();
        var result = null;
        var pages = $('ul.PagingList li').eq("-1").text();
        if(pages !== "") {
            pages = pages.match(/[0-9]+/g).pop();    
            result = parseInt(pages);
        }else {
            if(Search.container($).length > 0) {
                result = 1;
            }
        }
        
        return result;
     }
}



var Category = {
    name: function($) {
        var name = $('h1.page-heading').text();
        name = cleanName(name);
        return name;
    }
}
