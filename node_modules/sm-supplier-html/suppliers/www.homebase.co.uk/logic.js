var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var instockCheck = require('../../lib/inStockCheck')
module.exports = replaceWithwebAddressChangeToCamelCase = {
    "useJavascript": true,
    "usePhantom": "homebase.phantom.js",
    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'
        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk';
            result.push(info)
        });

        return result
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    },
    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    }

}

var Product = {
    name: function ($) {
        var name = $('div.page-title').text();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        var stock =true
        var inStock = $('div.product-details-delivery-msg product-details-delivery-msg--disabled').text();
        // var checkstock = $('div.currently-out-of-stock').text();
        if(inStock){
            stock=instockCheck(instockCheck,stock)
            return inStock;
        }else{
            return 'UNCHECKED'
        }
        
        // if (inStock !== null) {
        //     inStock = inStock.toLowerCase();
        //     if (inStock.indexOf('Not available for delivery') > -1) {
        //         inStock = false;
        //     } else {
        //         inStock = true;
        //     }
        // }



        //   if (checkstock !== null) {
        //       checkstock = checkstock.toLowerCase();
        //       if (checkstock.indexOf('currently out of stock for home delivery') > -1) {
        //           inStock = false;
        //       }
        //   }




        

    },
    price: function ($) {
        var price = $('div.price-value').text();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var img = $('div.rsContainer img').attr('src');
        return 'https://www.homebase.co.uk'+img;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('.product-tile');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('.product-tile__description').text();
        name = cleanName(name);
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('[itemprop="priceCurrency"]').text()
        let roundedPrice = getPrice(price);

        if(roundedPrice == null) {
            price = getPrice(price+'.00')
        } else {
            price = roundedPrice
        }


        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product)
        if (anchor) {
            url = $(anchor).attr('href');
        }
        return "https://www.homebase.co.uk" + url;

    },
    image: function ($, product) {
        var img = $(product).find('img.photo').attr('src');
        //let wrapper = $(product).find('.product-list__photo').html()
        return img;

    }
}

var Category = {
    name: function ($) {
        var name = cleanName($("h1.page-heading.search-result_header").text())
            name = name.replace(/[0-9]/g, '').trim()
            name = name.replace('Results for ', '')
        return name;
    }
}
var Pagination = {

    items: function ($) {
        var container = Search.container($);
        var pages = cleanName($("div.category-name h1")
            .text())

        if (container && pages) {
            return container.length;
        } else {
            return null;
        }

    },
    pages: function ($) {
        var pages = cleanName($("div.category-name h1")
            .text())

        var container = Search.container($);

        if (pages && container) {
            return Math.ceil(pages.split(" (")[1].split(")")[0] / this.items($));
        } else {
            return null;
        }



    }
}
