const Base = require('../lib/es/base');

class Migrate extends Base {
  constructor(config, collection) {
    super(config, collection);
    this.country = collection.country;
  }

  getMatchedAsins(supplier, next) {
    let query = {
      "query": {
        "match": {
          "state": "matched"
        }
      },
      "size": 8119,
      "_source": ["asin"]
    }
    this.runSearch(this.country + '-' + supplier, query, (err, result) => {
      if (err) {
        next(err);
      } else {
        let data = this._reduceToArrayOf('asin', result.hits.hits);
        next(err, data);
      }

    })
  }

  getRecordsForAsins(asins, next, old) {

    var payload = {
      index: this.country === 'uk' ? 'uk-www-amazon-co-uk' : 'us-www-amazon-com',
      type: 'amazon',
      ids: asins
    };

    if(old) {
      payload.type = payload.index.replace(this.country + '-','');
      payload.index = this.country + '-products' 
    }

    this.mgetNew(payload, (err, result) => {
      next(err,result)
    })
    
  }

  _reduceToArrayOf(key, result) {
    let source = [];
    result.map((record) => {
      source.push(record._source[key])
    })
    return source;
  }
}

module.exports = Migrate;