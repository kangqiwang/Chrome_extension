var ProductPageInfo = require ('../../lib/productPageInfo.js');
var SearchPageInfo = require ('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require  ('../../lib/paginationNumberInfo.js');
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require ('../../lib/CategoryInfo.js');

module.exports = replaceWithwebAddressChangeToCamelCase =  {

    'sku': (url) => {
        return url.substring(url.lastIndexOf("/")+1,url.lastIndexOf(""))
    },

    'product' : function($, next) {
        // product - Returns product information for provided url
        var info  = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'us'
        info.description = Product.description($)

        return info
    },

    'search' : function($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function(index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product);
            info.sku = Search.url($, product).substring(Search.url($, product).lastIndexOf("/")+1,Search.url($, product).lastIndexOf(""));
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'us';
            //result.push(info)

            if(info.price !== null) { // THIS STOPS US PUSHING THE ONES WITH "TO" //
                result.push(info);
            }
        });

        return result
    },

    'pagination' : function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category' : function($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function($) {
        var name = $('h1.product-name').text();
        name = cleanName(name);
        return name;
    },
    inStock: function($) {
        var inStock = true;
        var checkStock = $('span.outofStock').text();

        if(checkStock) {
            checkStock = checkStock.toLowerCase();
            if(checkStock.indexOf('sold out') > -1) {
                inStock = false;  // THIS IS HOW WE CHECK FOR OUT OF STOCK //
            }
        }

        return inStock
    },
    price: function($) {
        var price = $('div#product-box-price').text();
        price = getPrice(price);
        return price;
    },
    image: function($) {
        var image = $('img#productImage').attr('src');
        return 'https:' + image;
    },
    description: function($) {
        var description = $('div#overview p.content').text();

        if (description != null) {
            return description.replace(/(\r\n|\n|\r|)/gm, "").replace(/(\s+)/gm, " ").trim();
        }
    }
}

var Search = {
    container: function($) {
        return $('div.cf div.productSketch');
    },
    name: function($, product) {
        var name = $(product).find('a.productSketch-name-link').text();
        name = cleanName(name);
        return name;
    },
    price: function($, product) {
        var price = $(product) .find('span.regularPrice').text();       

        if(price.indexOf("to") > -1) {
            price = null                  // IF ANY PRICE HAS "TO" OR "-" WE DONT WANT TO PUSH THAT TO OUR RESULTS //
        }

        price = getPrice(price);
        return price;
    },
    url: function($, product) {
        return $(product).find('a.productSketch-name-link').attr('href');
    },
    image: function($, product) {
        var image = $(product).find('div.image img').attr('src');
        return 'https:' + image;
    }
}

var Pagination = {

     items: function($) {
        var items = $('div.cf div.productSketch'); 
        items = items.length;
        return items
     },
     pages: function($) {
        return 1
     }
}

var Category = {
    name: function($) {
        return cleanName($("div#page-content h1").text());
    }
}