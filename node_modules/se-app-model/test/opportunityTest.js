const should = require('should');
const OpportuntiyModel = require('../index.js').model.opportunity
const demoBody = require('../lib/es/UsOpportunityDemo.json')

const config = require('../config').es;

describe('Opportunity Test', function() {

        this.timeout(10000)

        // it('should return products as array', function(done) {
        //         var Opportunity = new OpportuntiyModel(config, {
        //            country: 'us',
        //            userName: 'mike',
        //            wishlist: false
        //         })

        //         Opportunity.find({}, (err, result) => {
        //             should(err).be.equal(null)
        //             result.should.have.property('total')
        //             result.should.have.property('records')
        //             result.total.should.be.above(0)
        //             result.records.length.should.be.above(0)
        //             done();
        //         })

        // })

        //  it('should return products as object', function(done) {
        //         config.createIdKey = true
        //         var Opportunity = new OpportuntiyModel(config, {
        //            country: 'us',
        //            userName: 'mike',
        //            wishlist: false,
        //         })

        //         Opportunity.find({}, (err, result) => {
        //             should(err).be.equal(null)
        //             result.should.have.property('total')
        //             result.should.have.property('records')
        //             result.total.should.be.above(0)
        //             Object.keys(result.records).length.should.be.above(0)
        //             done();
        //         })

        // })

        it('should add one opportunity to elasticSearch', function(done) {
            config.createIdKey = true
            var Opportunity = new OpportuntiyModel(config, {
                country: 'us',
                userName: 'mike',
                wishlist: false
            })

            Opportunity.save({
                type: 'opportunity',
                data: demoBody
            },(err, result) => {
                should(err).be.equal(null);
                done()
            })

        })


        //  it('should work with pagination as object', function(done) {
        //         config.createIdKey = true
        //         var Opportunity = new OpportuntiyModel(config, {
        //            country: 'us',
        //            userName: 'mike'
        //         })

        //         var payload = {
        //             country: 'us',
        //             filter:
        //             { loading: false,
        //                 minimumRoi: { value: 20 },
        //                 minimumProfit: { value: 3.5 },
        //                 cashBackAmount: { value: '' },
        //                 shippingFee: { value: '' },
        //                 salesRankFilter: { value: 7 },
        //                 minimumAmazonPrice: { value: 1 },
        //                 maxBuyPriceFromSupplier: { value: '' },
        //                 productsWithoutBuyBox: { state: 'off' },
        //                 noAmazonOrFbaCompetition: { state: 'off' },
        //                 fullfilmentFeesPerItem: { value: '' },
        //                 addFbaCharges: { state: 'off' },
        //                 addVat: { state: 'off' },
        //                 monthOneStorageFee: { value: '' },
        //                 sortBy: { selected: 'newestToOldest' },
        //                 suppliers: { selected: 'all', records: {} },
        //                 categories: { selected: 'sdp_misc_display_on_website', records: {} },
        //                 search: { selected: 'all' },
        //                 textSearch: { value: '' }
        //             },
        //             size: 1,
        //             start: 0
        //         }


        //         Opportunity.findFiltered(payload, (err, result) => {
        //             should(err).be.equal(null)
        //             result.should.have.property('total')
        //             result.should.have.property('records')
        //             result.total.should.be.above(0)
        //             Object.keys(result.records).length.should.be.equal(1)
        //             done();
        //         })

        // })

})
