var ProductPageInfo = require('../../lib/productPageInfo.js');
var SearchPageInfo = require('../../lib/searchPageInfo.js');
var PaginationNumberInfo = require('../../lib/paginationNumberInfo.js');
var routine = require("../../lib/routine.js");
var cleanName = require('../../lib/cleanName.js');
var getPrice = require('../../lib/getPrice.js');
var CategoryInfo = require('../../lib/CategoryInfo.js');
var inStockCheck = require('../../lib/inStockCheck.js')

module.exports = replaceWithwebAddressChangeToCamelCase = {

    'product': function ($, next) {
        // product - Returns product information for provided url
        var info = new ProductPageInfo()
        info.name = Product.name($)
        info.inStock = Product.inStock($)
        info.price = Product.price($)
        info.image = Product.image($)
        info.country = 'uk'

        return info
    },

    'search': function ($, next) {
        // search -  Returns an array of products from the suppliers search page
        var result = []

        Search.container($).map(function (index, product) {
            var info = new SearchPageInfo()
            info.name = Search.name($, product)
            info.price = Search.price($, product);
            info.url = Search.url($, product);
            info.image = Search.image($, product);
            info.country = 'uk'
            result.push(info)
        });

        return result
    },

    'pagination': function ($, next) {

        var info = new PaginationNumberInfo()
        info.items = Pagination.items($);
        info.pages = Pagination.pages($);

        return info
    },
    'category': function ($, next) {
        var info = new CategoryInfo()
        info.name = Category.name($);

        return info
    }
}

var Product = {
    name: function ($) {
        var name = $('h1.content-title').html();
        name = cleanName(name);
        return name;

    },
    inStock: function ($) {
        // var inStock = true
        // var able =$('article.aside-content .h2').text()
        // var check=$('.product-detail-code>p.text-alt').text()
        // inStock = inStockCheck(check,inStock)
        // inStock=inStockCheck(able,inStock)
        return "UNCHECKED";

    },
    price: function ($) {
        var price = $('article.aside-content .h2').html();
        price = getPrice(price);
        return price;

    },
    image: function ($) {
        var image = $('div.product-detail-feature-img a img').attr('src');
        image = 'http://www.bmstores.co.uk' + image;
        return image;

    }
}

var Search = {
    container: function ($) {
        var searchProducts = $('div.content-inner div.col-xs-4');
        return searchProducts;

    },
    name: function ($, product) {
        var name = $(product).find('span.product-name').html();
        name = cleanName(name)
        return name;

    },
    price: function ($, product) {
        var price = $(product).find('span.product-price').html();
        price = getPrice(price);
        return price;

    },
    url: function ($, product) {
        var url = null;
        var anchor = $(product).find('a');
        if (anchor) {
            url = 'http://www.bmstores.co.uk' + $(anchor).attr('href');
        }
        return url;


    },
    image: function ($, product) {
        var image = $(product).find('a.product img').attr('src');
        image = 'http:' + image;
        return image;
    }
}

var Pagination = {

    items: function ($) {
        return routine.matchNumbersAndPop($, "select#show");

    },
    pages: function ($) {
        return routine.matchNumbersAndPop($, "ul.pagination-buttons");

    }
}

var Category = {
    name: function ($) {
        return routine.queryAndClean($, "h1.content-title");
    }
}




